<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-ja-JP.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LibClang メソッド</title><meta name="Language" content="ja-jp" /><meta name="System.Keywords" content="LibClang クラス、メソッド" /><meta name="Microsoft.Help.Id" content="Methods.T:ClangNet.Native.LibClang" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="ClangNet.Native" /><meta name="file" content="aa5de6af-91e8-b206-bd77-cc3b446c5f9a" /><meta name="guid" content="aa5de6af-91e8-b206-bd77-cc3b446c5f9a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d357d1b3-948f-447c-b29b-2bd0cf5eec16.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/15690703-9428-8faf-18a7-cde07e62bf21.htm" title="ClangNet" tocid="15690703-9428-8faf-18a7-cde07e62bf21">ClangNet</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/56206511-e128-4c2f-f3a9-aefe73ab5cb3.htm" title="ClangNet.Native" tocid="56206511-e128-4c2f-f3a9-aefe73ab5cb3">ClangNet.Native</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/61d25157-394c-121d-aaf1-543efa4183d0.htm" title="LibClang クラス" tocid="61d25157-394c-121d-aaf1-543efa4183d0">LibClang クラス</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/aa5de6af-91e8-b206-bd77-cc3b446c5f9a.htm" title="LibClang メソッド" tocid="aa5de6af-91e8-b206-bd77-cc3b446c5f9a">LibClang メソッド</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a4ce56bd-dc3d-4bbc-c7b0-3addc9024c12.htm" title="clang_annotateTokens メソッド " tocid="a4ce56bd-dc3d-4bbc-c7b0-3addc9024c12">clang_annotateTokens メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ce59c8e6-8fb1-dbf6-cdef-1a74e38310a5.htm" title="clang_BlockCommandComment_getArgText メソッド " tocid="ce59c8e6-8fb1-dbf6-cdef-1a74e38310a5">clang_BlockCommandComment_getArgText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/48262b53-4123-af08-6140-dbc5acd40f1b.htm" title="clang_BlockCommandComment_getCommandName メソッド " tocid="48262b53-4123-af08-6140-dbc5acd40f1b">clang_BlockCommandComment_getCommandName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8d103e7c-e907-909b-e93a-76a5866747fb.htm" title="clang_BlockCommandComment_getNumArgs メソッド " tocid="8d103e7c-e907-909b-e93a-76a5866747fb">clang_BlockCommandComment_getNumArgs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/11fd0e20-2b8c-535b-6ec7-5a591aac50d8.htm" title="clang_BlockCommandComment_getParagraph メソッド " tocid="11fd0e20-2b8c-535b-6ec7-5a591aac50d8">clang_BlockCommandComment_getParagraph メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/676e5e55-4583-66b5-aadf-086dc484e3a5.htm" title="clang_codeCompleteAt メソッド " tocid="676e5e55-4583-66b5-aadf-086dc484e3a5">clang_codeCompleteAt メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2c037ff7-5eb0-317d-f16a-e200b54ee46b.htm" title="clang_codeCompleteGetContainerKind メソッド " tocid="2c037ff7-5eb0-317d-f16a-e200b54ee46b">clang_codeCompleteGetContainerKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc7f7884-3397-2863-2aa1-0b974797ab81.htm" title="clang_codeCompleteGetContainerUSR メソッド " tocid="dc7f7884-3397-2863-2aa1-0b974797ab81">clang_codeCompleteGetContainerUSR メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/65ed01fc-8603-8115-b817-46eea7458d38.htm" title="clang_codeCompleteGetContexts メソッド " tocid="65ed01fc-8603-8115-b817-46eea7458d38">clang_codeCompleteGetContexts メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/da15f878-a062-564c-3701-978384b839a8.htm" title="clang_codeCompleteGetDiagnostic メソッド " tocid="da15f878-a062-564c-3701-978384b839a8">clang_codeCompleteGetDiagnostic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/af822cad-d704-fcfd-1730-c2795725bc12.htm" title="clang_codeCompleteGetNumDiagnostics メソッド " tocid="af822cad-d704-fcfd-1730-c2795725bc12">clang_codeCompleteGetNumDiagnostics メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/75c6cb39-60f1-8303-f339-755c1f61af3c.htm" title="clang_codeCompleteGetObjCSelector メソッド " tocid="75c6cb39-60f1-8303-f339-755c1f61af3c">clang_codeCompleteGetObjCSelector メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/67945df1-ab9c-b3c2-725c-47a9f8e392f9.htm" title="clang_Comment_getChild メソッド " tocid="67945df1-ab9c-b3c2-725c-47a9f8e392f9">clang_Comment_getChild メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/618d7521-8537-4724-b6bb-55ded76f4aec.htm" title="clang_Comment_getKind メソッド " tocid="618d7521-8537-4724-b6bb-55ded76f4aec">clang_Comment_getKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc171662-71df-b48e-c60d-7810f31cd61b.htm" title="clang_Comment_getNumChildren メソッド " tocid="dc171662-71df-b48e-c60d-7810f31cd61b">clang_Comment_getNumChildren メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/418878e8-0c27-3e7a-e02f-0673a6f727a0.htm" title="clang_Comment_isWhitespace メソッド " tocid="418878e8-0c27-3e7a-e02f-0673a6f727a0">clang_Comment_isWhitespace メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c8d4721e-64c1-df2f-bbbb-9f4ab6aaca0a.htm" title="clang_CompilationDatabase_dispose メソッド " tocid="c8d4721e-64c1-df2f-bbbb-9f4ab6aaca0a">clang_CompilationDatabase_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/90b8dc57-6ace-f47c-e64a-b1738fa8ed19.htm" title="clang_CompilationDatabase_fromDirectory メソッド " tocid="90b8dc57-6ace-f47c-e64a-b1738fa8ed19">clang_CompilationDatabase_fromDirectory メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0dfccf4b-b765-05f4-1a74-88c561aba7ac.htm" title="clang_CompilationDatabase_getAllCompileCommands メソッド " tocid="0dfccf4b-b765-05f4-1a74-88c561aba7ac">clang_CompilationDatabase_getAllCompileCommands メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d1fe46d3-1115-9581-0b2f-91e1df97be8f.htm" title="clang_CompilationDatabase_getCompileCommands メソッド " tocid="d1fe46d3-1115-9581-0b2f-91e1df97be8f">clang_CompilationDatabase_getCompileCommands メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5b5a1635-9b55-2eda-f31a-c31d084ee897.htm" title="clang_CompileCommand_getArg メソッド " tocid="5b5a1635-9b55-2eda-f31a-c31d084ee897">clang_CompileCommand_getArg メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ca26978-037f-fc1a-fd3b-5ae05a32dbcf.htm" title="clang_CompileCommand_getDirectory メソッド " tocid="3ca26978-037f-fc1a-fd3b-5ae05a32dbcf">clang_CompileCommand_getDirectory メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/373c993b-07ed-28ca-4d4a-ded3a634e306.htm" title="clang_CompileCommand_getFilename メソッド " tocid="373c993b-07ed-28ca-4d4a-ded3a634e306">clang_CompileCommand_getFilename メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/93d79e67-86a9-af20-1664-5a365db3570b.htm" title="clang_CompileCommand_getMappedSourceContent メソッド " tocid="93d79e67-86a9-af20-1664-5a365db3570b">clang_CompileCommand_getMappedSourceContent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cb22458b-45a2-fc59-69ca-6ada56c83255.htm" title="clang_CompileCommand_getMappedSourcePath メソッド " tocid="cb22458b-45a2-fc59-69ca-6ada56c83255">clang_CompileCommand_getMappedSourcePath メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f2e33652-3552-d006-a0f0-1b67a1e19592.htm" title="clang_CompileCommand_getNumArgs メソッド " tocid="f2e33652-3552-d006-a0f0-1b67a1e19592">clang_CompileCommand_getNumArgs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6dc01be3-a33a-bc60-f8e0-c7887ee7ed33.htm" title="clang_CompileCommand_getNumMappedSources メソッド " tocid="6dc01be3-a33a-bc60-f8e0-c7887ee7ed33">clang_CompileCommand_getNumMappedSources メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3e77174-319d-8529-e11a-b80590975386.htm" title="clang_CompileCommands_dispose メソッド " tocid="a3e77174-319d-8529-e11a-b80590975386">clang_CompileCommands_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f08a483e-4277-b300-d7b3-33c6e548d96e.htm" title="clang_CompileCommands_getCommand メソッド " tocid="f08a483e-4277-b300-d7b3-33c6e548d96e">clang_CompileCommands_getCommand メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5f922819-ed4b-df90-a4f1-6b5a8031c0ef.htm" title="clang_CompileCommands_getSize メソッド " tocid="5f922819-ed4b-df90-a4f1-6b5a8031c0ef">clang_CompileCommands_getSize メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/56128532-91ff-3016-c770-d853a9c132ea.htm" title="clang_constructUSR_ObjCCategory メソッド " tocid="56128532-91ff-3016-c770-d853a9c132ea">clang_constructUSR_ObjCCategory メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/01e0490f-0265-8688-c99b-49d9f525af4b.htm" title="clang_constructUSR_ObjCClass メソッド " tocid="01e0490f-0265-8688-c99b-49d9f525af4b">clang_constructUSR_ObjCClass メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/81ab7a8f-f53d-c1da-6168-877376e12467.htm" title="clang_constructUSR_ObjCIvar メソッド " tocid="81ab7a8f-f53d-c1da-6168-877376e12467">clang_constructUSR_ObjCIvar メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bc6221c0-fadb-bd3d-8f2a-a0b051dbb7a7.htm" title="clang_constructUSR_ObjCMethod メソッド " tocid="bc6221c0-fadb-bd3d-8f2a-a0b051dbb7a7">clang_constructUSR_ObjCMethod メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/17681792-1108-f928-458c-6130ee3fbfff.htm" title="clang_constructUSR_ObjCProperty メソッド " tocid="17681792-1108-f928-458c-6130ee3fbfff">clang_constructUSR_ObjCProperty メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/87013e35-29a4-7afa-bc38-add70869de39.htm" title="clang_constructUSR_ObjCProtocol メソッド " tocid="87013e35-29a4-7afa-bc38-add70869de39">clang_constructUSR_ObjCProtocol メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0c7d9b30-b250-7115-c36e-f308916e1e7a.htm" title="clang_createCXCursorSet メソッド " tocid="0c7d9b30-b250-7115-c36e-f308916e1e7a">clang_createCXCursorSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/100eb96c-7e1b-533e-ca59-5cb98e026277.htm" title="clang_createIndex メソッド " tocid="100eb96c-7e1b-533e-ca59-5cb98e026277">clang_createIndex メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/650ae66e-9bf0-cd42-7aaa-b6813dad152f.htm" title="clang_createTranslationUnit メソッド " tocid="650ae66e-9bf0-cd42-7aaa-b6813dad152f">clang_createTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/be7426d6-732e-0911-d6fc-8f0ddd31e8bc.htm" title="clang_createTranslationUnit2 メソッド " tocid="be7426d6-732e-0911-d6fc-8f0ddd31e8bc">clang_createTranslationUnit2 メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c54e4fc7-dcc8-5ab3-4582-8a38479f5bb8.htm" title="clang_createTranslationUnitFromSourceFile メソッド " tocid="c54e4fc7-dcc8-5ab3-4582-8a38479f5bb8">clang_createTranslationUnitFromSourceFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8c1f1cad-bd1a-e23c-853b-a3ef51abe74e.htm" title="clang_Cursor_Evaluate メソッド " tocid="8c1f1cad-bd1a-e23c-853b-a3ef51abe74e">clang_Cursor_Evaluate メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f366441b-b3b6-cdd6-8a58-3da487bfd410.htm" title="clang_Cursor_getArgument メソッド " tocid="f366441b-b3b6-cdd6-8a58-3da487bfd410">clang_Cursor_getArgument メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/17a4ee9f-9239-2ef6-3891-adc1867854be.htm" title="clang_Cursor_getBriefCommentText メソッド " tocid="17a4ee9f-9239-2ef6-3891-adc1867854be">clang_Cursor_getBriefCommentText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e58ff857-1e6a-a865-bd1b-b579e9a99bf7.htm" title="clang_Cursor_getCommentRange メソッド " tocid="e58ff857-1e6a-a865-bd1b-b579e9a99bf7">clang_Cursor_getCommentRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e8451ceb-dc68-87f4-9c0c-425455424e73.htm" title="clang_Cursor_getCxxManglings メソッド " tocid="e8451ceb-dc68-87f4-9c0c-425455424e73">clang_Cursor_getCxxManglings メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9468ab22-1d8e-a5ba-de41-b3aa3ac97fcc.htm" title="clang_Cursor_getMangling メソッド " tocid="9468ab22-1d8e-a5ba-de41-b3aa3ac97fcc">clang_Cursor_getMangling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1c1b5805-becb-6b04-f159-ec188e1a91d4.htm" title="clang_Cursor_getModule メソッド " tocid="1c1b5805-becb-6b04-f159-ec188e1a91d4">clang_Cursor_getModule メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9614eb85-b315-abe4-4a8e-a0333d8d6eea.htm" title="clang_Cursor_getModuleForFile メソッド " tocid="9614eb85-b315-abe4-4a8e-a0333d8d6eea">clang_Cursor_getModuleForFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0555aa94-1656-b3df-ccc1-340742dec33f.htm" title="clang_Cursor_getNumArguments メソッド " tocid="0555aa94-1656-b3df-ccc1-340742dec33f">clang_Cursor_getNumArguments メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cb687582-3b7e-d224-a76e-11bdc2719f52.htm" title="clang_Cursor_getNumTemplateArguments メソッド " tocid="cb687582-3b7e-d224-a76e-11bdc2719f52">clang_Cursor_getNumTemplateArguments メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a25cfd7e-b9f5-3baf-b789-d84b5aa40892.htm" title="clang_Cursor_getObjCDeclQualifiers メソッド " tocid="a25cfd7e-b9f5-3baf-b789-d84b5aa40892">clang_Cursor_getObjCDeclQualifiers メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c34fc3a7-db58-cced-8d5e-ba081874ca4a.htm" title="clang_Cursor_getObjCManglings メソッド " tocid="c34fc3a7-db58-cced-8d5e-ba081874ca4a">clang_Cursor_getObjCManglings メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a9a79802-1da3-471d-11ce-141b2cb0ff77.htm" title="clang_Cursor_getObjCPropertyAttributes メソッド " tocid="a9a79802-1da3-471d-11ce-141b2cb0ff77">clang_Cursor_getObjCPropertyAttributes メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e5c2cd86-0ca6-b3c1-dd75-6c87c0cb1cfd.htm" title="clang_Cursor_getObjCPropertyGetterName メソッド " tocid="e5c2cd86-0ca6-b3c1-dd75-6c87c0cb1cfd">clang_Cursor_getObjCPropertyGetterName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5469c7ec-db26-9393-bd67-d02607f7aac5.htm" title="clang_Cursor_getObjCPropertySetterName メソッド " tocid="5469c7ec-db26-9393-bd67-d02607f7aac5">clang_Cursor_getObjCPropertySetterName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/136fc4b5-ce81-b208-6274-6617a3225436.htm" title="clang_Cursor_getObjCSelectorIndex メソッド " tocid="136fc4b5-ce81-b208-6274-6617a3225436">clang_Cursor_getObjCSelectorIndex メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d3d14339-528b-5cbc-109b-b6e86322b739.htm" title="clang_Cursor_getOffsetOfField メソッド " tocid="d3d14339-528b-5cbc-109b-b6e86322b739">clang_Cursor_getOffsetOfField メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0dd8b556-6dd3-cb9a-4d87-17ec2db9dea7.htm" title="clang_Cursor_getParsedComment メソッド " tocid="0dd8b556-6dd3-cb9a-4d87-17ec2db9dea7">clang_Cursor_getParsedComment メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ac70998d-d6f6-14f1-e1dc-188a8eabeb9e.htm" title="clang_Cursor_getRawCommentText メソッド " tocid="ac70998d-d6f6-14f1-e1dc-188a8eabeb9e">clang_Cursor_getRawCommentText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6f40af64-28dc-ed3b-7e63-1efc00aeab0c.htm" title="clang_Cursor_getReceiverType メソッド " tocid="6f40af64-28dc-ed3b-7e63-1efc00aeab0c">clang_Cursor_getReceiverType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/925a7cc2-624d-ffe7-bd43-5617c053f1a8.htm" title="clang_Cursor_getSpellingNameRange メソッド " tocid="925a7cc2-624d-ffe7-bd43-5617c053f1a8">clang_Cursor_getSpellingNameRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/429c27f4-65cb-924e-6017-f40b9c595966.htm" title="clang_Cursor_getStorageClass メソッド " tocid="429c27f4-65cb-924e-6017-f40b9c595966">clang_Cursor_getStorageClass メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/147fd64d-9262-f1c6-a1cd-4809451e955c.htm" title="clang_Cursor_getTemplateArgumentKind メソッド " tocid="147fd64d-9262-f1c6-a1cd-4809451e955c">clang_Cursor_getTemplateArgumentKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d2a8ba0d-1914-f5ee-dbd2-256fdd762f9d.htm" title="clang_Cursor_getTemplateArgumentType メソッド " tocid="d2a8ba0d-1914-f5ee-dbd2-256fdd762f9d">clang_Cursor_getTemplateArgumentType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/360218ac-eaf1-62b0-2a72-95655772da83.htm" title="clang_Cursor_getTemplateArgumentUnsignedValue メソッド " tocid="360218ac-eaf1-62b0-2a72-95655772da83">clang_Cursor_getTemplateArgumentUnsignedValue メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/96d9b93e-33d5-347f-7014-a08f3d3d49e3.htm" title="clang_Cursor_getTemplateArgumentValue メソッド " tocid="96d9b93e-33d5-347f-7014-a08f3d3d49e3">clang_Cursor_getTemplateArgumentValue メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d764aa71-444b-7079-fdf9-b8669aabe5e8.htm" title="clang_Cursor_getTranslationUnit メソッド " tocid="d764aa71-444b-7079-fdf9-b8669aabe5e8">clang_Cursor_getTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/50b23286-ad87-6c5a-2ba4-511cd91494f0.htm" title="clang_Cursor_hasAttrs メソッド " tocid="50b23286-ad87-6c5a-2ba4-511cd91494f0">clang_Cursor_hasAttrs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/39d6123e-108d-c5b4-749c-5cc731f00ddd.htm" title="clang_Cursor_isAnonymous メソッド " tocid="39d6123e-108d-c5b4-749c-5cc731f00ddd">clang_Cursor_isAnonymous メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7b092d79-17b6-6b1b-d94a-a5e300601742.htm" title="clang_Cursor_isBitField メソッド " tocid="7b092d79-17b6-6b1b-d94a-a5e300601742">clang_Cursor_isBitField メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/df2a25d5-cc63-9898-2872-c5c1ba083e4c.htm" title="clang_Cursor_isDynamicCall メソッド " tocid="df2a25d5-cc63-9898-2872-c5c1ba083e4c">clang_Cursor_isDynamicCall メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d3539e5e-4694-87c1-4534-cc2bb73aec4f.htm" title="clang_Cursor_isExternalSymbol メソッド " tocid="d3539e5e-4694-87c1-4534-cc2bb73aec4f">clang_Cursor_isExternalSymbol メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3c237a9a-a445-1de7-461b-b2f730aa23fd.htm" title="clang_Cursor_isNull メソッド " tocid="3c237a9a-a445-1de7-461b-b2f730aa23fd">clang_Cursor_isNull メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9a2c74a1-60f2-5e98-4e63-8c62ecd911ad.htm" title="clang_Cursor_isObjCOptional メソッド " tocid="9a2c74a1-60f2-5e98-4e63-8c62ecd911ad">clang_Cursor_isObjCOptional メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eb8d23a5-d1a9-8322-910c-5f6234b40ad0.htm" title="clang_Cursor_isVariadic メソッド " tocid="eb8d23a5-d1a9-8322-910c-5f6234b40ad0">clang_Cursor_isVariadic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c7cb1270-263c-498e-63e2-6c00df3892fc.htm" title="clang_CXCursorSet_contains メソッド " tocid="c7cb1270-263c-498e-63e2-6c00df3892fc">clang_CXCursorSet_contains メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/97169acf-a28d-d783-69d9-6eacf118de88.htm" title="clang_CXCursorSet_insert メソッド " tocid="97169acf-a28d-d783-69d9-6eacf118de88">clang_CXCursorSet_insert メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5bbf0847-7c57-970d-445b-f8069274d7a5.htm" title="clang_CXIndex_getGlobalOptions メソッド " tocid="5bbf0847-7c57-970d-445b-f8069274d7a5">clang_CXIndex_getGlobalOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6fd3e267-d9f9-10f7-d54e-4a9fd81bcddd.htm" title="clang_CXIndex_setGlobalOptions メソッド " tocid="6fd3e267-d9f9-10f7-d54e-4a9fd81bcddd">clang_CXIndex_setGlobalOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c32a019b-44c6-5b15-5c37-8da8c93e939a.htm" title="clang_CXIndex_setInvocationEmissionPathOption メソッド " tocid="c32a019b-44c6-5b15-5c37-8da8c93e939a">clang_CXIndex_setInvocationEmissionPathOption メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/49ae6ff6-219e-c074-d6d4-c5f7dc51026a.htm" title="clang_CXXConstructor_isConvertingConstructor メソッド " tocid="49ae6ff6-219e-c074-d6d4-c5f7dc51026a">clang_CXXConstructor_isConvertingConstructor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8da3c26f-c97a-0006-1764-988e2e518df3.htm" title="clang_CXXConstructor_isCopyConstructor メソッド " tocid="8da3c26f-c97a-0006-1764-988e2e518df3">clang_CXXConstructor_isCopyConstructor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c66afd8c-aaf3-33fc-36d5-de30c4a2bceb.htm" title="clang_CXXConstructor_isDefaultConstructor メソッド " tocid="c66afd8c-aaf3-33fc-36d5-de30c4a2bceb">clang_CXXConstructor_isDefaultConstructor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/289855f9-826c-f43b-4339-343fb38bf8a2.htm" title="clang_CXXConstructor_isMoveConstructor メソッド " tocid="289855f9-826c-f43b-4339-343fb38bf8a2">clang_CXXConstructor_isMoveConstructor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8478fe7d-2f6c-3096-ef2a-354d5f3e2e74.htm" title="clang_CXXField_isMutable メソッド " tocid="8478fe7d-2f6c-3096-ef2a-354d5f3e2e74">clang_CXXField_isMutable メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/688bda03-1ff6-ee64-c6f1-73e2f2f8946c.htm" title="clang_CXXMethod_isConst メソッド " tocid="688bda03-1ff6-ee64-c6f1-73e2f2f8946c">clang_CXXMethod_isConst メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/835b62db-e97b-b9f8-d3a0-8b554f606437.htm" title="clang_CXXMethod_isDefaulted メソッド " tocid="835b62db-e97b-b9f8-d3a0-8b554f606437">clang_CXXMethod_isDefaulted メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0c3d62da-7d72-eb9b-f62a-973c395b1764.htm" title="clang_CXXMethod_isPureVirtual メソッド " tocid="0c3d62da-7d72-eb9b-f62a-973c395b1764">clang_CXXMethod_isPureVirtual メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/41bc932b-f09f-19cd-fbf4-561ebbeeae87.htm" title="clang_CXXMethod_isStatic メソッド " tocid="41bc932b-f09f-19cd-fbf4-561ebbeeae87">clang_CXXMethod_isStatic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/88b77aae-8f93-f677-a4e1-a5f4879c64d0.htm" title="clang_CXXMethod_isVirtual メソッド " tocid="88b77aae-8f93-f677-a4e1-a5f4879c64d0">clang_CXXMethod_isVirtual メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5eac569b-f9e2-ba96-b24a-0d96c69252db.htm" title="clang_CXXRecord_isAbstract メソッド " tocid="5eac569b-f9e2-ba96-b24a-0d96c69252db">clang_CXXRecord_isAbstract メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d7b677ca-92c7-527a-117f-e81d04bd213b.htm" title="clang_defaultCodeCompleteOptions メソッド " tocid="d7b677ca-92c7-527a-117f-e81d04bd213b">clang_defaultCodeCompleteOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2b61712b-ecae-3029-6fd9-4e1585b1fb87.htm" title="clang_defaultDiagnosticDisplayOptions メソッド " tocid="2b61712b-ecae-3029-6fd9-4e1585b1fb87">clang_defaultDiagnosticDisplayOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d92f0366-5084-8e95-b795-ee93cc1dc36e.htm" title="clang_defaultEditingTranslationUnitOptions メソッド " tocid="d92f0366-5084-8e95-b795-ee93cc1dc36e">clang_defaultEditingTranslationUnitOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3b987a6-f6e5-25d8-4ad8-44671135b263.htm" title="clang_defaultReparseOptions メソッド " tocid="a3b987a6-f6e5-25d8-4ad8-44671135b263">clang_defaultReparseOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e93000fa-b082-c81f-6a8d-ea781b09549d.htm" title="clang_defaultSaveOptions メソッド " tocid="e93000fa-b082-c81f-6a8d-ea781b09549d">clang_defaultSaveOptions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5ecb2060-0aa8-a2c0-254b-62f4967785a0.htm" title="clang_disposeCodeCompleteResults メソッド " tocid="5ecb2060-0aa8-a2c0-254b-62f4967785a0">clang_disposeCodeCompleteResults メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7a974241-9225-d6d1-58c8-6eb0dbd1c892.htm" title="clang_disposeCXCursorSet メソッド " tocid="7a974241-9225-d6d1-58c8-6eb0dbd1c892">clang_disposeCXCursorSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bf0f30d3-7f6d-8473-7022-298daf500155.htm" title="clang_disposeCXPlatformAvailability メソッド " tocid="bf0f30d3-7f6d-8473-7022-298daf500155">clang_disposeCXPlatformAvailability メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6dcb3dc1-459a-5294-4e3a-eceebb7eeede.htm" title="clang_disposeCXTUResourceUsage メソッド " tocid="6dcb3dc1-459a-5294-4e3a-eceebb7eeede">clang_disposeCXTUResourceUsage メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ab3923e4-2e63-7dae-6721-08411f2f268b.htm" title="clang_disposeDiagnostic メソッド " tocid="ab3923e4-2e63-7dae-6721-08411f2f268b">clang_disposeDiagnostic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8e194244-142c-a9a3-aa0d-c139f01e5cee.htm" title="clang_disposeDiagnosticSet メソッド " tocid="8e194244-142c-a9a3-aa0d-c139f01e5cee">clang_disposeDiagnosticSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/301e99db-0585-67fe-d4bc-6ec2a31c1378.htm" title="clang_disposeIndex メソッド " tocid="301e99db-0585-67fe-d4bc-6ec2a31c1378">clang_disposeIndex メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f31cbc4a-24df-6330-5173-1a3aedc79d00.htm" title="clang_disposeOverriddenCursors メソッド " tocid="f31cbc4a-24df-6330-5173-1a3aedc79d00">clang_disposeOverriddenCursors メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8487036f-ae60-c690-ac55-7bb467a240cf.htm" title="clang_disposeSourceRangeList メソッド " tocid="8487036f-ae60-c690-ac55-7bb467a240cf">clang_disposeSourceRangeList メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/449c4eac-220f-8ae0-9fae-6a79a98270ab.htm" title="clang_disposeString メソッド " tocid="449c4eac-220f-8ae0-9fae-6a79a98270ab">clang_disposeString メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c3007fd7-b85f-c15c-feb3-2bb945d243d4.htm" title="clang_disposeStringSet メソッド " tocid="c3007fd7-b85f-c15c-feb3-2bb945d243d4">clang_disposeStringSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/89bf63ba-2004-c580-5d81-4cb5ee9bdaaa.htm" title="clang_disposeTokens メソッド " tocid="89bf63ba-2004-c580-5d81-4cb5ee9bdaaa">clang_disposeTokens メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/89eba98f-62fc-3dce-9cc9-e86fa1c589e5.htm" title="clang_disposeTranslationUnit メソッド " tocid="89eba98f-62fc-3dce-9cc9-e86fa1c589e5">clang_disposeTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4b6ade0e-b645-be72-5407-9f4df52276a0.htm" title="clang_enableStackTraces メソッド " tocid="4b6ade0e-b645-be72-5407-9f4df52276a0">clang_enableStackTraces メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e8c565b5-3dcc-3aae-4939-58a8c09b37b7.htm" title="clang_EnumDecl_isScoped メソッド " tocid="e8c565b5-3dcc-3aae-4939-58a8c09b37b7">clang_EnumDecl_isScoped メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a1b55133-3957-ac28-42e6-4f15a3994566.htm" title="clang_equalCursors メソッド " tocid="a1b55133-3957-ac28-42e6-4f15a3994566">clang_equalCursors メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/105174d4-b2e9-7519-2043-1709542e2edf.htm" title="clang_equalLocations メソッド " tocid="105174d4-b2e9-7519-2043-1709542e2edf">clang_equalLocations メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eba67bce-65a1-3fc3-2e87-0730233ed100.htm" title="clang_equalRanges メソッド " tocid="eba67bce-65a1-3fc3-2e87-0730233ed100">clang_equalRanges メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/34d1e89b-c305-7a8f-dd46-e88f83805cfc.htm" title="clang_equalTypes メソッド " tocid="34d1e89b-c305-7a8f-dd46-e88f83805cfc">clang_equalTypes メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/67ca053a-17c9-11b6-428a-69ec886d85b0.htm" title="clang_EvalResult_dispose メソッド " tocid="67ca053a-17c9-11b6-428a-69ec886d85b0">clang_EvalResult_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f25885a9-0b27-a9dc-e1d3-ae5d79e05434.htm" title="clang_EvalResult_getAsDouble メソッド " tocid="f25885a9-0b27-a9dc-e1d3-ae5d79e05434">clang_EvalResult_getAsDouble メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8287903e-cb40-a64a-09f3-db959851e8a0.htm" title="clang_EvalResult_getAsInt メソッド " tocid="8287903e-cb40-a64a-09f3-db959851e8a0">clang_EvalResult_getAsInt メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5dff3d0b-c234-aef5-bcdf-b2315864e65b.htm" title="clang_EvalResult_getAsLongLong メソッド " tocid="5dff3d0b-c234-aef5-bcdf-b2315864e65b">clang_EvalResult_getAsLongLong メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/20b95b1a-67a9-227c-a91e-4fd6af5059d2.htm" title="clang_EvalResult_getAsStr メソッド " tocid="20b95b1a-67a9-227c-a91e-4fd6af5059d2">clang_EvalResult_getAsStr メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/da7b132c-3a37-9571-9998-b3aa56db47c8.htm" title="clang_EvalResult_getAsUnsigned メソッド " tocid="da7b132c-3a37-9571-9998-b3aa56db47c8">clang_EvalResult_getAsUnsigned メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/80b6e850-3c21-47ef-9bbc-a8d19790eff0.htm" title="clang_EvalResult_getKind メソッド " tocid="80b6e850-3c21-47ef-9bbc-a8d19790eff0">clang_EvalResult_getKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4b501cf7-fbab-d021-82f0-c4f2095f5ee3.htm" title="clang_EvalResult_isUnsignedInt メソッド " tocid="4b501cf7-fbab-d021-82f0-c4f2095f5ee3">clang_EvalResult_isUnsignedInt メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d172d77b-a05d-3e60-665b-cc7575e6f083.htm" title="clang_executeOnThread メソッド " tocid="d172d77b-a05d-3e60-665b-cc7575e6f083">clang_executeOnThread メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d42df471-827e-d8cf-f9a5-f9e3cf435b60.htm" title="clang_File_isEqual メソッド " tocid="d42df471-827e-d8cf-f9a5-f9e3cf435b60">clang_File_isEqual メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3df01619-1bb6-5f3b-842d-d4b137f71ef5.htm" title="clang_File_tryGetRealPathName メソッド " tocid="3df01619-1bb6-5f3b-842d-d4b137f71ef5">clang_File_tryGetRealPathName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c8202ea5-8463-ef9e-8822-adb1b5fae78f.htm" title="clang_findIncludesInFile メソッド " tocid="c8202ea5-8463-ef9e-8822-adb1b5fae78f">clang_findIncludesInFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/737dafc4-0d54-cf68-6a3c-33af15697386.htm" title="clang_findReferencesInFile メソッド " tocid="737dafc4-0d54-cf68-6a3c-33af15697386">clang_findReferencesInFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/279f601c-99c6-5d04-098a-3462c109c913.htm" title="clang_formatDiagnostic メソッド " tocid="279f601c-99c6-5d04-098a-3462c109c913">clang_formatDiagnostic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ef241973-fd4b-4eaf-2efd-cc5a84cae530.htm" title="clang_free メソッド " tocid="ef241973-fd4b-4eaf-2efd-cc5a84cae530">clang_free メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d5fff5dc-ce2d-2f05-ed61-c4ebaa2e7558.htm" title="clang_FullComment_getAsHTML メソッド " tocid="d5fff5dc-ce2d-2f05-ed61-c4ebaa2e7558">clang_FullComment_getAsHTML メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/80e228dc-bd37-f935-7831-c938ce43af38.htm" title="clang_FullComment_getAsXML メソッド " tocid="80e228dc-bd37-f935-7831-c938ce43af38">clang_FullComment_getAsXML メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7c69cc3a-33ae-0d92-b15b-a26b78a43e2e.htm" title="clang_getAddressSpace メソッド " tocid="7c69cc3a-33ae-0d92-b15b-a26b78a43e2e">clang_getAddressSpace メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/50a9e9a1-423d-2979-ebf5-036fd9dea4eb.htm" title="clang_getAllSkippedRanges メソッド " tocid="50a9e9a1-423d-2979-ebf5-036fd9dea4eb">clang_getAllSkippedRanges メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/785090fe-fa77-ca61-31b5-112bacace0d5.htm" title="clang_getArgType メソッド " tocid="785090fe-fa77-ca61-31b5-112bacace0d5">clang_getArgType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/71379251-c3a2-c8f9-8666-19bef26ebc2e.htm" title="clang_getArrayElementType メソッド " tocid="71379251-c3a2-c8f9-8666-19bef26ebc2e">clang_getArrayElementType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/94284874-9f52-9541-26a4-354992abd326.htm" title="clang_getArraySize メソッド " tocid="94284874-9f52-9541-26a4-354992abd326">clang_getArraySize メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7a5033ae-1035-e60c-1c41-9a3841db18d0.htm" title="clang_getBuildSessionTimestamp メソッド " tocid="7a5033ae-1035-e60c-1c41-9a3841db18d0">clang_getBuildSessionTimestamp メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e44cdecc-81a7-5018-ca98-1647100589ea.htm" title="clang_getCanonicalCursor メソッド " tocid="e44cdecc-81a7-5018-ca98-1647100589ea">clang_getCanonicalCursor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ee8753e-9dbd-5d33-64e8-732906e8d370.htm" title="clang_getCanonicalType メソッド " tocid="3ee8753e-9dbd-5d33-64e8-732906e8d370">clang_getCanonicalType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f2fb33cf-ff49-677a-6a75-7faf0b3d0fdb.htm" title="clang_getChildDiagnostics メソッド " tocid="f2fb33cf-ff49-677a-6a75-7faf0b3d0fdb">clang_getChildDiagnostics メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/175b1726-2121-1f0d-235a-36fcc9e945c4.htm" title="clang_getClangVersion メソッド " tocid="175b1726-2121-1f0d-235a-36fcc9e945c4">clang_getClangVersion メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/964ffa5b-813d-2c50-4b32-4145340487ec.htm" title="clang_getCompletionAnnotation メソッド " tocid="964ffa5b-813d-2c50-4b32-4145340487ec">clang_getCompletionAnnotation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d870dcb4-866c-88de-d308-8e042902aed0.htm" title="clang_getCompletionAvailability メソッド " tocid="d870dcb4-866c-88de-d308-8e042902aed0">clang_getCompletionAvailability メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/92469717-a481-c6a2-8a63-5976334cff12.htm" title="clang_getCompletionBriefComment メソッド " tocid="92469717-a481-c6a2-8a63-5976334cff12">clang_getCompletionBriefComment メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/00582135-a48e-7aba-2d5c-099267f8a46b.htm" title="clang_getCompletionChunkCompletionString メソッド " tocid="00582135-a48e-7aba-2d5c-099267f8a46b">clang_getCompletionChunkCompletionString メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/54d73650-66fa-4e35-9a87-d31f9d7666e2.htm" title="clang_getCompletionChunkKind メソッド " tocid="54d73650-66fa-4e35-9a87-d31f9d7666e2">clang_getCompletionChunkKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9f2d4e9d-dd31-5f45-3748-1ecd5fec646d.htm" title="clang_getCompletionChunkText メソッド " tocid="9f2d4e9d-dd31-5f45-3748-1ecd5fec646d">clang_getCompletionChunkText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4d441ed8-6472-762c-ff85-d7975caf5b28.htm" title="clang_getCompletionFixIt メソッド " tocid="4d441ed8-6472-762c-ff85-d7975caf5b28">clang_getCompletionFixIt メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/425be485-280c-f07f-66cc-77854d4758a9.htm" title="clang_getCompletionNumAnnotations メソッド " tocid="425be485-280c-f07f-66cc-77854d4758a9">clang_getCompletionNumAnnotations メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b9cf32ef-552c-f034-2788-40467cde5bb9.htm" title="clang_getCompletionNumFixIts メソッド " tocid="b9cf32ef-552c-f034-2788-40467cde5bb9">clang_getCompletionNumFixIts メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e8cede48-29be-5be8-b694-79e93c51375e.htm" title="clang_getCompletionParent メソッド " tocid="e8cede48-29be-5be8-b694-79e93c51375e">clang_getCompletionParent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/947db5fc-da49-f313-e62e-279403bfd11a.htm" title="clang_getCompletionPriority メソッド " tocid="947db5fc-da49-f313-e62e-279403bfd11a">clang_getCompletionPriority メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bcee87cf-46f7-7a91-afe8-62cd77e02b61.htm" title="clang_getCString メソッド " tocid="bcee87cf-46f7-7a91-afe8-62cd77e02b61">clang_getCString メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6ee03627-0c63-6cd8-fbb4-6b942cb1ab25.htm" title="clang_getCursor メソッド " tocid="6ee03627-0c63-6cd8-fbb4-6b942cb1ab25">clang_getCursor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e4d4d609-69ef-aa56-1d13-128015d16507.htm" title="clang_getCursorAvailability メソッド " tocid="e4d4d609-69ef-aa56-1d13-128015d16507">clang_getCursorAvailability メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/22c8bc56-7e11-3d79-947b-4c4bedec8d90.htm" title="clang_getCursorCompletionString メソッド " tocid="22c8bc56-7e11-3d79-947b-4c4bedec8d90">clang_getCursorCompletionString メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ec2519ea-0fb1-5c7e-3dbc-1e9e9780ae66.htm" title="clang_getCursorDefinition メソッド " tocid="ec2519ea-0fb1-5c7e-3dbc-1e9e9780ae66">clang_getCursorDefinition メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ef854996-1075-2690-86b1-36023a85ab56.htm" title="clang_getCursorDisplayName メソッド " tocid="ef854996-1075-2690-86b1-36023a85ab56">clang_getCursorDisplayName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/093e2e50-9f36-0c5a-6dae-c20f792369de.htm" title="clang_getCursorExceptionSpecificationType メソッド " tocid="093e2e50-9f36-0c5a-6dae-c20f792369de">clang_getCursorExceptionSpecificationType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9c4ac8e0-b151-7c9f-4cfb-72c4bb254690.htm" title="clang_getCursorExtent メソッド " tocid="9c4ac8e0-b151-7c9f-4cfb-72c4bb254690">clang_getCursorExtent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/12d30714-dbf5-ab95-60a1-eb9ce73e3fa8.htm" title="clang_getCursorKind メソッド " tocid="12d30714-dbf5-ab95-60a1-eb9ce73e3fa8">clang_getCursorKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3805a56c-7728-c33e-1b29-809f67ce8758.htm" title="clang_getCursorKindSpelling メソッド " tocid="3805a56c-7728-c33e-1b29-809f67ce8758">clang_getCursorKindSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cf5e19f1-65b5-da9f-15c1-bb61f98c865c.htm" title="clang_getCursorLanguage メソッド " tocid="cf5e19f1-65b5-da9f-15c1-bb61f98c865c">clang_getCursorLanguage メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fcbfb714-5bc0-604e-d5fc-9d4bc5d31f42.htm" title="clang_getCursorLexicalParent メソッド " tocid="fcbfb714-5bc0-604e-d5fc-9d4bc5d31f42">clang_getCursorLexicalParent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c5444289-2231-1057-b84c-e0240b18abb4.htm" title="clang_getCursorLinkage メソッド " tocid="c5444289-2231-1057-b84c-e0240b18abb4">clang_getCursorLinkage メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f11f5207-4ab1-62db-2722-794db0b38a2c.htm" title="clang_getCursorLocation メソッド " tocid="f11f5207-4ab1-62db-2722-794db0b38a2c">clang_getCursorLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bd709db7-ae5d-1bc9-067a-65f41c0675f6.htm" title="clang_getCursorPlatformAvailability メソッド " tocid="bd709db7-ae5d-1bc9-067a-65f41c0675f6">clang_getCursorPlatformAvailability メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0218a961-a6b9-6e09-4a74-08914c9acce4.htm" title="clang_getCursorPrettyPrinted メソッド " tocid="0218a961-a6b9-6e09-4a74-08914c9acce4">clang_getCursorPrettyPrinted メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8bbd656b-f1e2-2479-6bae-acd53fb5f3a5.htm" title="clang_getCursorPrintingPolicy メソッド " tocid="8bbd656b-f1e2-2479-6bae-acd53fb5f3a5">clang_getCursorPrintingPolicy メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/98054169-bc2a-5029-ecf4-b539096be2cc.htm" title="clang_getCursorReferenced メソッド " tocid="98054169-bc2a-5029-ecf4-b539096be2cc">clang_getCursorReferenced メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fc528126-a98c-34d4-ec14-6677bdf7d900.htm" title="clang_getCursorReferenceNameRange メソッド " tocid="fc528126-a98c-34d4-ec14-6677bdf7d900">clang_getCursorReferenceNameRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7d7b52cc-e604-a039-c451-13220c794dab.htm" title="clang_getCursorResultType メソッド " tocid="7d7b52cc-e604-a039-c451-13220c794dab">clang_getCursorResultType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e394f757-22f7-b46e-7452-747eaa9b50e0.htm" title="clang_getCursorSemanticParent メソッド " tocid="e394f757-22f7-b46e-7452-747eaa9b50e0">clang_getCursorSemanticParent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d6286594-e167-9675-4948-127a5205aee4.htm" title="clang_getCursorSpelling メソッド " tocid="d6286594-e167-9675-4948-127a5205aee4">clang_getCursorSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2bd6b086-cf1a-0645-c95d-3b2021b47ffb.htm" title="clang_getCursorTLSKind メソッド " tocid="2bd6b086-cf1a-0645-c95d-3b2021b47ffb">clang_getCursorTLSKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/36a96438-dfa7-d1c4-02b9-fc7bb24d0922.htm" title="clang_getCursorType メソッド " tocid="36a96438-dfa7-d1c4-02b9-fc7bb24d0922">clang_getCursorType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ea4a123-6bfd-6347-50dc-cdd5d8db2d68.htm" title="clang_getCursorUSR メソッド " tocid="3ea4a123-6bfd-6347-50dc-cdd5d8db2d68">clang_getCursorUSR メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2b94364b-3437-cf0f-c1b8-7a871ed1162b.htm" title="clang_getCursorVisibility メソッド " tocid="2b94364b-3437-cf0f-c1b8-7a871ed1162b">clang_getCursorVisibility メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b9d87f23-726b-efd9-f65a-121f38264a40.htm" title="clang_getCXTUResourceUsage メソッド " tocid="b9d87f23-726b-efd9-f65a-121f38264a40">clang_getCXTUResourceUsage メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1b1b9c8d-434b-cd10-9d22-04e9417e63a2.htm" title="clang_getCXXAccessSpecifier メソッド " tocid="1b1b9c8d-434b-cd10-9d22-04e9417e63a2">clang_getCXXAccessSpecifier メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/906ae883-96cd-9e57-cdc9-c70254ada705.htm" title="clang_getDeclObjCEncoding メソッド " tocid="906ae883-96cd-9e57-cdc9-c70254ada705">clang_getDeclObjCEncoding メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/62bb2a3f-335a-041f-2ca3-f52da3256a4e.htm" title="clang_getDeclObjCTypeEncoding メソッド " tocid="62bb2a3f-335a-041f-2ca3-f52da3256a4e">clang_getDeclObjCTypeEncoding メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/35b1996b-fe51-7146-311d-7100d528a4da.htm" title="clang_getDefinitionSpellingAndExtent メソッド " tocid="35b1996b-fe51-7146-311d-7100d528a4da">clang_getDefinitionSpellingAndExtent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/40875a5c-05ac-f388-84d9-cc4b3488d626.htm" title="clang_getDiagnostic メソッド " tocid="40875a5c-05ac-f388-84d9-cc4b3488d626">clang_getDiagnostic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c4270197-d452-ff76-06f3-640de8e06e34.htm" title="clang_getDiagnosticCategory メソッド " tocid="c4270197-d452-ff76-06f3-640de8e06e34">clang_getDiagnosticCategory メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3cd07cc6-f1a7-a381-98b2-3e796b57a843.htm" title="clang_getDiagnosticCategoryName メソッド " tocid="3cd07cc6-f1a7-a381-98b2-3e796b57a843">clang_getDiagnosticCategoryName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/43bbd92e-2584-6ac0-7617-3100793b6261.htm" title="clang_getDiagnosticCategoryText メソッド " tocid="43bbd92e-2584-6ac0-7617-3100793b6261">clang_getDiagnosticCategoryText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/908035a9-7255-5969-5ae7-bbb770a2b42a.htm" title="clang_getDiagnosticFixIt メソッド " tocid="908035a9-7255-5969-5ae7-bbb770a2b42a">clang_getDiagnosticFixIt メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4fa7689f-1c63-6d9b-b2f8-1e3fe069ac00.htm" title="clang_getDiagnosticInSet メソッド " tocid="4fa7689f-1c63-6d9b-b2f8-1e3fe069ac00">clang_getDiagnosticInSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eb263224-be9f-8659-5d2f-c8c67eb5ccc2.htm" title="clang_getDiagnosticLocation メソッド " tocid="eb263224-be9f-8659-5d2f-c8c67eb5ccc2">clang_getDiagnosticLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/795b67de-006d-7d6a-ccf9-fed92d17c85c.htm" title="clang_getDiagnosticNumFixIts メソッド " tocid="795b67de-006d-7d6a-ccf9-fed92d17c85c">clang_getDiagnosticNumFixIts メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/525e0a96-a1f1-8419-2bc5-05bfc1f423c0.htm" title="clang_getDiagnosticNumRanges メソッド " tocid="525e0a96-a1f1-8419-2bc5-05bfc1f423c0">clang_getDiagnosticNumRanges メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/973ad9c5-52a4-9a28-41b5-a93f6d29e515.htm" title="clang_getDiagnosticOption メソッド " tocid="973ad9c5-52a4-9a28-41b5-a93f6d29e515">clang_getDiagnosticOption メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/02745e9b-40c3-ee4f-0544-6a4298fecd77.htm" title="clang_getDiagnosticRange メソッド " tocid="02745e9b-40c3-ee4f-0544-6a4298fecd77">clang_getDiagnosticRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8c4b5b8b-151c-dc01-f6c5-6fa1b05ca3a8.htm" title="clang_getDiagnosticSetFromTU メソッド " tocid="8c4b5b8b-151c-dc01-f6c5-6fa1b05ca3a8">clang_getDiagnosticSetFromTU メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc66b6a0-42db-0792-7b46-b92b0e26572a.htm" title="clang_getDiagnosticSeverity メソッド " tocid="dc66b6a0-42db-0792-7b46-b92b0e26572a">clang_getDiagnosticSeverity メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ace2142b-79f9-4a69-0fc9-b5580a7e49b0.htm" title="clang_getDiagnosticSpelling メソッド " tocid="ace2142b-79f9-4a69-0fc9-b5580a7e49b0">clang_getDiagnosticSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2ef6446b-b233-b823-8d72-dffb91cf64a6.htm" title="clang_getElementType メソッド " tocid="2ef6446b-b233-b823-8d72-dffb91cf64a6">clang_getElementType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ae64723b-1a33-8b87-245e-e120c33eccb8.htm" title="clang_getEnumConstantDeclUnsignedValue メソッド " tocid="ae64723b-1a33-8b87-245e-e120c33eccb8">clang_getEnumConstantDeclUnsignedValue メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bf507bfb-9ce6-830f-587a-ae774f76f0e0.htm" title="clang_getEnumConstantDeclValue メソッド " tocid="bf507bfb-9ce6-830f-587a-ae774f76f0e0">clang_getEnumConstantDeclValue メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b06dfd6b-8230-41b1-be67-afebf4bd47e4.htm" title="clang_getEnumDeclIntegerType メソッド " tocid="b06dfd6b-8230-41b1-be67-afebf4bd47e4">clang_getEnumDeclIntegerType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f08a6310-369e-df5b-70c8-32bc876ff9e3.htm" title="clang_getExceptionSpecificationType メソッド " tocid="f08a6310-369e-df5b-70c8-32bc876ff9e3">clang_getExceptionSpecificationType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bfe96e75-66be-c2a3-9d45-bca6ed559fe9.htm" title="clang_getExpansionLocation メソッド " tocid="bfe96e75-66be-c2a3-9d45-bca6ed559fe9">clang_getExpansionLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b21c6eb0-9d6d-2ba5-7c6a-ccdf86bfb8df.htm" title="clang_getFieldDeclBitWidth メソッド " tocid="b21c6eb0-9d6d-2ba5-7c6a-ccdf86bfb8df">clang_getFieldDeclBitWidth メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2be1940b-575f-59b2-057d-1da8b5a849b1.htm" title="clang_getFile メソッド " tocid="2be1940b-575f-59b2-057d-1da8b5a849b1">clang_getFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/468592b9-a89d-05bc-9f0d-3460821b3faf.htm" title="clang_getFileContents メソッド " tocid="468592b9-a89d-05bc-9f0d-3460821b3faf">clang_getFileContents メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6af082f5-f23f-f563-253e-4aca2cdf6b4b.htm" title="clang_getFileLocation メソッド " tocid="6af082f5-f23f-f563-253e-4aca2cdf6b4b">clang_getFileLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/717af2b2-6d0c-f434-3bb2-e53c1d6670e0.htm" title="clang_getFileName メソッド " tocid="717af2b2-6d0c-f434-3bb2-e53c1d6670e0">clang_getFileName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/daf50217-d853-3ab8-d564-ae2a73fb95b3.htm" title="clang_getFileTime メソッド " tocid="daf50217-d853-3ab8-d564-ae2a73fb95b3">clang_getFileTime メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1cb16a15-e886-d355-8b27-051321ee16ce.htm" title="clang_getFileUniqueID メソッド " tocid="1cb16a15-e886-d355-8b27-051321ee16ce">clang_getFileUniqueID メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0a13f23b-10a6-0a1a-671c-ecf0cec0016c.htm" title="clang_getFunctionTypeCallingConv メソッド " tocid="0a13f23b-10a6-0a1a-671c-ecf0cec0016c">clang_getFunctionTypeCallingConv メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e3dafa4a-dc0a-2196-88f2-8675ba6d12f3.htm" title="clang_getIBOutletCollectionType メソッド " tocid="e3dafa4a-dc0a-2196-88f2-8675ba6d12f3">clang_getIBOutletCollectionType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fb0322f0-2d88-f70b-e230-3d9f750e7381.htm" title="clang_getIncludedFile メソッド " tocid="fb0322f0-2d88-f70b-e230-3d9f750e7381">clang_getIncludedFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b6367d75-5913-d018-4b6f-6c14f2aff3a5.htm" title="clang_getInclusions メソッド " tocid="b6367d75-5913-d018-4b6f-6c14f2aff3a5">clang_getInclusions メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ac3281a6-f695-294b-4e7a-7df367b1ae8e.htm" title="clang_getInstantiationLocation メソッド " tocid="ac3281a6-f695-294b-4e7a-7df367b1ae8e">clang_getInstantiationLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0c63a80c-ccdd-f09e-72c0-22992bd569c3.htm" title="clang_getLocation メソッド " tocid="0c63a80c-ccdd-f09e-72c0-22992bd569c3">clang_getLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3a0eff0e-4157-5784-159a-e45b04f803b4.htm" title="clang_getLocationForOffset メソッド " tocid="3a0eff0e-4157-5784-159a-e45b04f803b4">clang_getLocationForOffset メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/67184c30-26da-3197-ae45-638c923b1645.htm" title="clang_getNamedType メソッド " tocid="67184c30-26da-3197-ae45-638c923b1645">clang_getNamedType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2dec26fb-ebdd-7d38-1906-b77011e50da5.htm" title="clang_getNullCursor メソッド " tocid="2dec26fb-ebdd-7d38-1906-b77011e50da5">clang_getNullCursor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/17b2e5d3-9b1e-8857-bb91-2d3445482e58.htm" title="clang_getNullLocation メソッド " tocid="17b2e5d3-9b1e-8857-bb91-2d3445482e58">clang_getNullLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5b85e87a-7fd6-4665-6149-0d1be865e119.htm" title="clang_getNullRange メソッド " tocid="5b85e87a-7fd6-4665-6149-0d1be865e119">clang_getNullRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/409d698a-ad69-674d-d73a-c264df90d466.htm" title="clang_getNumArgTypes メソッド " tocid="409d698a-ad69-674d-d73a-c264df90d466">clang_getNumArgTypes メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/83dd93e2-a419-2d75-0584-7db3bd10cdb4.htm" title="clang_getNumCompletionChunks メソッド " tocid="83dd93e2-a419-2d75-0584-7db3bd10cdb4">clang_getNumCompletionChunks メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/003cfbe4-4a99-f8da-2a44-42cff4ce842e.htm" title="clang_getNumDiagnostics メソッド " tocid="003cfbe4-4a99-f8da-2a44-42cff4ce842e">clang_getNumDiagnostics メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ec12e2c0-b9e7-f527-4d39-2ad71017c182.htm" title="clang_getNumDiagnosticsInSet メソッド " tocid="ec12e2c0-b9e7-f527-4d39-2ad71017c182">clang_getNumDiagnosticsInSet メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3f9e86c6-aa04-80f7-928b-62b12daeb538.htm" title="clang_getNumElements メソッド " tocid="3f9e86c6-aa04-80f7-928b-62b12daeb538">clang_getNumElements メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9419885d-ddf1-f7dc-e579-09dc60377856.htm" title="clang_getNumOverloadedDecls メソッド " tocid="9419885d-ddf1-f7dc-e579-09dc60377856">clang_getNumOverloadedDecls メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ce927d4b-1884-8a58-97e3-6d659a982547.htm" title="clang_getOverloadedDecl メソッド " tocid="ce927d4b-1884-8a58-97e3-6d659a982547">clang_getOverloadedDecl メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/951ab168-716d-2509-9d4e-92f8d9ab25ef.htm" title="clang_getOverriddenCursors メソッド " tocid="951ab168-716d-2509-9d4e-92f8d9ab25ef">clang_getOverriddenCursors メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/92df5a9e-7281-bd4b-d420-838a846a4ed7.htm" title="clang_getPointeeType メソッド " tocid="92df5a9e-7281-bd4b-d420-838a846a4ed7">clang_getPointeeType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5fe6af5c-20fb-5f44-ef4c-8add25693df4.htm" title="clang_getPresumedLocation メソッド " tocid="5fe6af5c-20fb-5f44-ef4c-8add25693df4">clang_getPresumedLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0727a275-b041-f0e0-345b-c98144309ea4.htm" title="clang_getRange メソッド " tocid="0727a275-b041-f0e0-345b-c98144309ea4">clang_getRange メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4aa43c2e-444c-7086-4bc3-a25872235d73.htm" title="clang_getRangeEnd メソッド " tocid="4aa43c2e-444c-7086-4bc3-a25872235d73">clang_getRangeEnd メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8bc7c5fa-5487-42b5-59a5-edd4379b2f97.htm" title="clang_getRangeStart メソッド " tocid="8bc7c5fa-5487-42b5-59a5-edd4379b2f97">clang_getRangeStart メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1e095d37-d785-8660-8062-ce4c4ba47838.htm" title="clang_getRemappings メソッド " tocid="1e095d37-d785-8660-8062-ce4c4ba47838">clang_getRemappings メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/76bbd212-1a92-aea0-abc5-e647fa9b3ff1.htm" title="clang_getRemappingsFromFileList メソッド " tocid="76bbd212-1a92-aea0-abc5-e647fa9b3ff1">clang_getRemappingsFromFileList メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/070861fa-1b34-c142-549b-fb95de110dc8.htm" title="clang_getResultType メソッド " tocid="070861fa-1b34-c142-549b-fb95de110dc8">clang_getResultType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/95fe266b-07c0-6dcf-d8fc-5c3b244c590d.htm" title="clang_getSkippedRanges メソッド " tocid="95fe266b-07c0-6dcf-d8fc-5c3b244c590d">clang_getSkippedRanges メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8c2f9a5c-30d2-243f-19fa-46b33d6dd3de.htm" title="clang_getSpecializedCursorTemplate メソッド " tocid="8c2f9a5c-30d2-243f-19fa-46b33d6dd3de">clang_getSpecializedCursorTemplate メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/04a7ec12-e551-8ab0-aba5-3cd9841fd190.htm" title="clang_getSpellingLocation メソッド " tocid="04a7ec12-e551-8ab0-aba5-3cd9841fd190">clang_getSpellingLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/31d012c7-5feb-0b91-7c70-3771fbd58439.htm" title="clang_getTemplateCursorKind メソッド " tocid="31d012c7-5feb-0b91-7c70-3771fbd58439">clang_getTemplateCursorKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0dc593c8-3eb4-7461-d689-a8d3ae0155e4.htm" title="clang_getToken メソッド " tocid="0dc593c8-3eb4-7461-d689-a8d3ae0155e4">clang_getToken メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7f8099cb-bbb3-9629-5928-049d422b6add.htm" title="clang_getTokenExtent メソッド " tocid="7f8099cb-bbb3-9629-5928-049d422b6add">clang_getTokenExtent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bc199c45-1a6d-f1b8-8fed-a4f1fdced385.htm" title="clang_getTokenKind メソッド " tocid="bc199c45-1a6d-f1b8-8fed-a4f1fdced385">clang_getTokenKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/752d3d91-b414-08fb-dec9-e34bbfbe8a4f.htm" title="clang_getTokenLocation メソッド " tocid="752d3d91-b414-08fb-dec9-e34bbfbe8a4f">clang_getTokenLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3e8f72b1-0e26-2730-fadc-73298d130769.htm" title="clang_getTokenSpelling メソッド " tocid="3e8f72b1-0e26-2730-fadc-73298d130769">clang_getTokenSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/318cf321-1efe-9059-3b2f-dc5402103748.htm" title="clang_getTranslationUnitCursor メソッド " tocid="318cf321-1efe-9059-3b2f-dc5402103748">clang_getTranslationUnitCursor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1ec67da6-f578-196f-caa6-684b2f327de1.htm" title="clang_getTranslationUnitSpelling メソッド " tocid="1ec67da6-f578-196f-caa6-684b2f327de1">clang_getTranslationUnitSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/72261121-e4c7-a9f5-5aae-0ee77cb5b58a.htm" title="clang_getTranslationUnitTargetInfo メソッド " tocid="72261121-e4c7-a9f5-5aae-0ee77cb5b58a">clang_getTranslationUnitTargetInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3fc02857-38c4-ea9b-60b1-50136e426de6.htm" title="clang_getTUResourceUsageName メソッド " tocid="3fc02857-38c4-ea9b-60b1-50136e426de6">clang_getTUResourceUsageName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/455cafd2-1fbc-b961-4247-b81bc3c0874a.htm" title="clang_getTypeDeclaration メソッド " tocid="455cafd2-1fbc-b961-4247-b81bc3c0874a">clang_getTypeDeclaration メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8843f3d4-907e-f2b4-6e87-b52cdc34daca.htm" title="clang_getTypedefDeclUnderlyingType メソッド " tocid="8843f3d4-907e-f2b4-6e87-b52cdc34daca">clang_getTypedefDeclUnderlyingType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d63f0a3a-86a1-3bba-9e5e-df3548d770b4.htm" title="clang_getTypedefName メソッド " tocid="d63f0a3a-86a1-3bba-9e5e-df3548d770b4">clang_getTypedefName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cc1d0004-8a5e-6625-bcb3-6d107b752ee9.htm" title="clang_getTypeKindSpelling メソッド " tocid="cc1d0004-8a5e-6625-bcb3-6d107b752ee9">clang_getTypeKindSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/378d4695-b8d7-4825-41b3-d59cfb333ff4.htm" title="clang_getTypeSpelling メソッド " tocid="378d4695-b8d7-4825-41b3-d59cfb333ff4">clang_getTypeSpelling メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ffededf8-6a0c-cd8d-7e40-0d7a2cd3e0e1.htm" title="clang_hashCursor メソッド " tocid="ffededf8-6a0c-cd8d-7e40-0d7a2cd3e0e1">clang_hashCursor メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/287b8a77-f8c4-49c4-be51-8a00e32b1420.htm" title="clang_HTMLStartTag_getAttrName メソッド " tocid="287b8a77-f8c4-49c4-be51-8a00e32b1420">clang_HTMLStartTag_getAttrName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/473c4d02-99fa-4c36-0ad1-6d80b66865db.htm" title="clang_HTMLStartTag_getAttrValue メソッド " tocid="473c4d02-99fa-4c36-0ad1-6d80b66865db">clang_HTMLStartTag_getAttrValue メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e3a850df-7fa8-9965-e3b3-b02412fe9ced.htm" title="clang_HTMLStartTag_getNumAttrs メソッド " tocid="e3a850df-7fa8-9965-e3b3-b02412fe9ced">clang_HTMLStartTag_getNumAttrs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e90e7f16-811a-4647-7fa1-aa16423675ad.htm" title="clang_HTMLStartTagComment_isSelfClosing メソッド " tocid="e90e7f16-811a-4647-7fa1-aa16423675ad">clang_HTMLStartTagComment_isSelfClosing メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c06b9741-e2ca-40bd-5a3a-0be194a699ef.htm" title="clang_HTMLTagComment_getAsString メソッド " tocid="c06b9741-e2ca-40bd-5a3a-0be194a699ef">clang_HTMLTagComment_getAsString メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c248b476-f24a-336a-fe0c-f87d32f3c1e4.htm" title="clang_HTMLTagComment_getTagName メソッド " tocid="c248b476-f24a-336a-fe0c-f87d32f3c1e4">clang_HTMLTagComment_getTagName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6ddf6337-8de7-a94a-6f8f-a2734ec387d7.htm" title="clang_index_getClientContainer メソッド " tocid="6ddf6337-8de7-a94a-6f8f-a2734ec387d7">clang_index_getClientContainer メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d32b090c-bc74-7ffc-dd56-f11ff4ab5fc1.htm" title="clang_index_getClientEntity メソッド " tocid="d32b090c-bc74-7ffc-dd56-f11ff4ab5fc1">clang_index_getClientEntity メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/96ca9b9e-7240-a2ac-a3fd-b02c7b5a0443.htm" title="clang_index_getCXXClassDeclInfo メソッド " tocid="96ca9b9e-7240-a2ac-a3fd-b02c7b5a0443">clang_index_getCXXClassDeclInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fd352b15-1bec-7bd6-0f5b-6cec17fc2ac2.htm" title="clang_index_getIBOutletCollectionAttrInfo メソッド " tocid="fd352b15-1bec-7bd6-0f5b-6cec17fc2ac2">clang_index_getIBOutletCollectionAttrInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2d0fb6e3-be5d-d229-c92d-e1931f94e371.htm" title="clang_index_getObjCCategoryDeclInfo メソッド " tocid="2d0fb6e3-be5d-d229-c92d-e1931f94e371">clang_index_getObjCCategoryDeclInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b99715e4-a1d8-3ba3-ba88-6b81e07bbce3.htm" title="clang_index_getObjCContainerDeclInfo メソッド " tocid="b99715e4-a1d8-3ba3-ba88-6b81e07bbce3">clang_index_getObjCContainerDeclInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/813460b2-dcb8-5cd8-86c7-9f31d2cfac90.htm" title="clang_index_getObjCInterfaceDeclInfo メソッド " tocid="813460b2-dcb8-5cd8-86c7-9f31d2cfac90">clang_index_getObjCInterfaceDeclInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0b58976f-c5c2-399a-131b-3219eb19b602.htm" title="clang_index_getObjCPropertyDeclInfo メソッド " tocid="0b58976f-c5c2-399a-131b-3219eb19b602">clang_index_getObjCPropertyDeclInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b2d9695f-e984-d7ea-e2ba-30df458654f2.htm" title="clang_index_getObjCProtocolRefListInfo メソッド " tocid="b2d9695f-e984-d7ea-e2ba-30df458654f2">clang_index_getObjCProtocolRefListInfo メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1602b39d-30f8-b24f-8bd0-36042505029c.htm" title="clang_index_isEntityObjCContainerKind メソッド " tocid="1602b39d-30f8-b24f-8bd0-36042505029c">clang_index_isEntityObjCContainerKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b844c12d-5237-9a82-31c4-d65056a22ce2.htm" title="clang_index_setClientContainer メソッド " tocid="b844c12d-5237-9a82-31c4-d65056a22ce2">clang_index_setClientContainer メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/01a06dfa-92d4-a89c-bc8a-70ef610bd2a2.htm" title="clang_index_setClientEntity メソッド " tocid="01a06dfa-92d4-a89c-bc8a-70ef610bd2a2">clang_index_setClientEntity メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fe062690-d2cf-9f11-db67-32ddcfacf908.htm" title="clang_IndexAction_create メソッド " tocid="fe062690-d2cf-9f11-db67-32ddcfacf908">clang_IndexAction_create メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9b555343-2a5e-f4a3-2c19-ac76a8aa4f45.htm" title="clang_IndexAction_dispose メソッド " tocid="9b555343-2a5e-f4a3-2c19-ac76a8aa4f45">clang_IndexAction_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ddbfeb9e-42c0-edae-47b8-f348133acbd7.htm" title="clang_indexLoc_getCXSourceLocation メソッド " tocid="ddbfeb9e-42c0-edae-47b8-f348133acbd7">clang_indexLoc_getCXSourceLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/41583743-0bde-562f-d25d-62a510fe6b60.htm" title="clang_indexLoc_getFileLocation メソッド " tocid="41583743-0bde-562f-d25d-62a510fe6b60">clang_indexLoc_getFileLocation メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/508f5403-2fe4-40f2-c0a4-96d583afac8d.htm" title="clang_indexSourceFile メソッド " tocid="508f5403-2fe4-40f2-c0a4-96d583afac8d">clang_indexSourceFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e5288395-c216-954e-03cb-cc816742ed34.htm" title="clang_indexSourceFileFullArgv メソッド " tocid="e5288395-c216-954e-03cb-cc816742ed34">clang_indexSourceFileFullArgv メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0ae2344d-0659-f35d-edb8-9d29a7ab4939.htm" title="clang_indexTranslationUnit メソッド " tocid="0ae2344d-0659-f35d-edb8-9d29a7ab4939">clang_indexTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/71cdce8a-f6ac-1d0a-9666-4c2847f4f87c.htm" title="clang_InlineCommandComment_getArgText メソッド " tocid="71cdce8a-f6ac-1d0a-9666-4c2847f4f87c">clang_InlineCommandComment_getArgText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/96b609d8-80f1-b469-8cf9-dfbb6980a3a2.htm" title="clang_InlineCommandComment_getCommandName メソッド " tocid="96b609d8-80f1-b469-8cf9-dfbb6980a3a2">clang_InlineCommandComment_getCommandName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7a4d9b24-85fc-c97b-541e-42133d00a3ea.htm" title="clang_InlineCommandComment_getNumArgs メソッド " tocid="7a4d9b24-85fc-c97b-541e-42133d00a3ea">clang_InlineCommandComment_getNumArgs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d31b2ec9-86b8-261f-5ac9-61fc35f5081f.htm" title="clang_InlineCommandComment_getRenderKind メソッド " tocid="d31b2ec9-86b8-261f-5ac9-61fc35f5081f">clang_InlineCommandComment_getRenderKind メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3a761b61-3393-1e4e-a313-ebb6c9d66ab7.htm" title="clang_InlineContentComment_hasTrailingNewline メソッド " tocid="3a761b61-3393-1e4e-a313-ebb6c9d66ab7">clang_InlineContentComment_hasTrailingNewline メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9fd764a2-7506-fe3e-3603-e7477de9b330.htm" title="clang_isAttribute メソッド " tocid="9fd764a2-7506-fe3e-3603-e7477de9b330">clang_isAttribute メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/67cd77eb-4b6e-05f8-a5e6-8e0e64049edb.htm" title="clang_isConstQualifiedType メソッド " tocid="67cd77eb-4b6e-05f8-a5e6-8e0e64049edb">clang_isConstQualifiedType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/62a09735-56dc-bb5a-4da1-bc13fafd5eab.htm" title="clang_isCursorDefinition メソッド " tocid="62a09735-56dc-bb5a-4da1-bc13fafd5eab">clang_isCursorDefinition メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7be527e5-18fb-62bd-2946-5487f4a9b633.htm" title="clang_isDeclaration メソッド " tocid="7be527e5-18fb-62bd-2946-5487f4a9b633">clang_isDeclaration メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/672537ad-0b38-f681-236a-9eca3ddf2c4f.htm" title="clang_isExpression メソッド " tocid="672537ad-0b38-f681-236a-9eca3ddf2c4f">clang_isExpression メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/524f9ccd-3e0a-41ff-a30c-2c75936e33cb.htm" title="clang_isFileMultipleIncludeGuarded メソッド " tocid="524f9ccd-3e0a-41ff-a30c-2c75936e33cb">clang_isFileMultipleIncludeGuarded メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4dd93f22-a0f3-99ab-f300-f5814cd87492.htm" title="clang_isFunctionInlined メソッド " tocid="4dd93f22-a0f3-99ab-f300-f5814cd87492">clang_isFunctionInlined メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4eb6a476-353b-cd66-b746-c65a11f769ff.htm" title="clang_isFunctionTypeVariadic メソッド " tocid="4eb6a476-353b-cd66-b746-c65a11f769ff">clang_isFunctionTypeVariadic メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/35371497-fb2f-ce6c-9958-cc33f3469be7.htm" title="clang_isInvalid メソッド " tocid="35371497-fb2f-ce6c-9958-cc33f3469be7">clang_isInvalid メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4422b1a0-5697-bf66-f87d-88d857d4053e.htm" title="clang_isInvalidDeclaration メソッド " tocid="4422b1a0-5697-bf66-f87d-88d857d4053e">clang_isInvalidDeclaration メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eed68fcf-1a2a-beb7-71da-f85a1a456442.htm" title="clang_isMacroBuiltin メソッド " tocid="eed68fcf-1a2a-beb7-71da-f85a1a456442">clang_isMacroBuiltin メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8c2e1738-c230-47b6-82c4-e5aef79bee6d.htm" title="clang_isMacroFunctionLike メソッド " tocid="8c2e1738-c230-47b6-82c4-e5aef79bee6d">clang_isMacroFunctionLike メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cc9fe1ed-496a-c0e3-a68d-dd7eeca9775d.htm" title="clang_isPODType メソッド " tocid="cc9fe1ed-496a-c0e3-a68d-dd7eeca9775d">clang_isPODType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f737334f-b740-48b9-f9f0-4d13df16390c.htm" title="clang_isPreprocessing メソッド " tocid="f737334f-b740-48b9-f9f0-4d13df16390c">clang_isPreprocessing メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5cde8c7a-934c-1aa1-e023-03d75d06d0e5.htm" title="clang_isReference メソッド " tocid="5cde8c7a-934c-1aa1-e023-03d75d06d0e5">clang_isReference メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/692b8b91-28c3-a8ab-6800-19e2ced41394.htm" title="clang_isRestrictQualifiedType メソッド " tocid="692b8b91-28c3-a8ab-6800-19e2ced41394">clang_isRestrictQualifiedType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/69d3d241-ea51-5ee9-604a-c3dec38880ae.htm" title="clang_isStatement メソッド " tocid="69d3d241-ea51-5ee9-604a-c3dec38880ae">clang_isStatement メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d9de1833-28dc-2011-9980-9dd3a75b4c28.htm" title="clang_isTranslationUnit メソッド " tocid="d9de1833-28dc-2011-9980-9dd3a75b4c28">clang_isTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/618bca53-2bdc-3c6d-f314-40ccff34a3ee.htm" title="clang_isUnexposed メソッド " tocid="618bca53-2bdc-3c6d-f314-40ccff34a3ee">clang_isUnexposed メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f5179175-6113-6c26-97f5-35409ca3ed8a.htm" title="clang_isVirtualBase メソッド " tocid="f5179175-6113-6c26-97f5-35409ca3ed8a">clang_isVirtualBase メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4f8562a3-3531-3c1b-3071-a9bc47208488.htm" title="clang_isVolatileQualifiedType メソッド " tocid="4f8562a3-3531-3c1b-3071-a9bc47208488">clang_isVolatileQualifiedType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1bef56dd-8fb9-b920-c774-e6dd385e6156.htm" title="clang_loadDiagnostics メソッド " tocid="1bef56dd-8fb9-b920-c774-e6dd385e6156">clang_loadDiagnostics メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2a02ccaa-9c1e-c2b7-bd83-be71ee62dde0.htm" title="clang_Location_isFromMainFile メソッド " tocid="2a02ccaa-9c1e-c2b7-bd83-be71ee62dde0">clang_Location_isFromMainFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f13c57a0-b66b-4a59-4db0-a79748ec7205.htm" title="clang_Location_isInSystemHeader メソッド " tocid="f13c57a0-b66b-4a59-4db0-a79748ec7205">clang_Location_isInSystemHeader メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bf153a58-79dc-5bc9-b97a-6d4feb13c62c.htm" title="clang_Module_getASTFile メソッド " tocid="bf153a58-79dc-5bc9-b97a-6d4feb13c62c">clang_Module_getASTFile メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8ddfd405-c9a7-83de-9a20-943095e48a40.htm" title="clang_Module_getFullName メソッド " tocid="8ddfd405-c9a7-83de-9a20-943095e48a40">clang_Module_getFullName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/02b37b19-321a-b009-a7e6-82813cfbd8f8.htm" title="clang_Module_getName メソッド " tocid="02b37b19-321a-b009-a7e6-82813cfbd8f8">clang_Module_getName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/28169c12-14be-3c15-8688-c73ce2ecadd0.htm" title="clang_Module_getNumTopLevelHeaders メソッド " tocid="28169c12-14be-3c15-8688-c73ce2ecadd0">clang_Module_getNumTopLevelHeaders メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/380890ab-13b9-d7e0-94ba-0325a03affeb.htm" title="clang_Module_getParent メソッド " tocid="380890ab-13b9-d7e0-94ba-0325a03affeb">clang_Module_getParent メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0618f522-c8b7-7085-0f2d-005401e5fa79.htm" title="clang_Module_getTopLevelHeader メソッド " tocid="0618f522-c8b7-7085-0f2d-005401e5fa79">clang_Module_getTopLevelHeader メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/05e7cf6c-400c-b973-1dc7-0fb9d4df8f89.htm" title="clang_Module_isSystem メソッド " tocid="05e7cf6c-400c-b973-1dc7-0fb9d4df8f89">clang_Module_isSystem メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aa5cc8b4-372a-f9bb-95b8-f9f6fcf043b5.htm" title="clang_ModuleMapDescriptor_create メソッド " tocid="aa5cc8b4-372a-f9bb-95b8-f9f6fcf043b5">clang_ModuleMapDescriptor_create メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ad632f1e-6f4e-d56d-eb70-d37472cf5e02.htm" title="clang_ModuleMapDescriptor_dispose メソッド " tocid="ad632f1e-6f4e-d56d-eb70-d37472cf5e02">clang_ModuleMapDescriptor_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2b6296fc-5323-7ce0-8e8d-068ffe1e8786.htm" title="clang_ModuleMapDescriptor_setFrameworkModuleName メソッド " tocid="2b6296fc-5323-7ce0-8e8d-068ffe1e8786">clang_ModuleMapDescriptor_setFrameworkModuleName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ec7a2b31-1f10-aacb-7fbd-9bd24bf8cc24.htm" title="clang_ModuleMapDescriptor_setUmbrellaHeader メソッド " tocid="ec7a2b31-1f10-aacb-7fbd-9bd24bf8cc24">clang_ModuleMapDescriptor_setUmbrellaHeader メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/929d251c-35a8-3513-165b-caf7611e3ecc.htm" title="clang_ModuleMapDescriptor_writeToBuffer メソッド " tocid="929d251c-35a8-3513-165b-caf7611e3ecc">clang_ModuleMapDescriptor_writeToBuffer メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aec9f4e2-3571-7895-e737-4f107e5b5634.htm" title="clang_ParamCommandComment_getDirection メソッド " tocid="aec9f4e2-3571-7895-e737-4f107e5b5634">clang_ParamCommandComment_getDirection メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7c5deccc-4149-4282-14f1-d541d4ab3bba.htm" title="clang_ParamCommandComment_getParamIndex メソッド " tocid="7c5deccc-4149-4282-14f1-d541d4ab3bba">clang_ParamCommandComment_getParamIndex メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d3beeed7-474a-1967-8b19-e0cb84c59de6.htm" title="clang_ParamCommandComment_getParamName メソッド " tocid="d3beeed7-474a-1967-8b19-e0cb84c59de6">clang_ParamCommandComment_getParamName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2851c873-82f6-559a-feae-63e331c7de89.htm" title="clang_ParamCommandComment_isDirectionExplicit メソッド " tocid="2851c873-82f6-559a-feae-63e331c7de89">clang_ParamCommandComment_isDirectionExplicit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eda7e5c5-ebc7-3e47-4bae-11e4333e599f.htm" title="clang_ParamCommandComment_isParamIndexValid メソッド " tocid="eda7e5c5-ebc7-3e47-4bae-11e4333e599f">clang_ParamCommandComment_isParamIndexValid メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f7cc02d2-6e45-11b5-b8f0-f2d09509d0cc.htm" title="clang_parseTranslationUnit メソッド " tocid="f7cc02d2-6e45-11b5-b8f0-f2d09509d0cc">clang_parseTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5f3cc85a-bfd1-495e-c77b-a29777625bb2.htm" title="clang_parseTranslationUnit2 メソッド " tocid="5f3cc85a-bfd1-495e-c77b-a29777625bb2">clang_parseTranslationUnit2 メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0e6eabd1-560f-33ef-fec9-d049ede037e5.htm" title="clang_parseTranslationUnit2FullArgv メソッド " tocid="0e6eabd1-560f-33ef-fec9-d049ede037e5">clang_parseTranslationUnit2FullArgv メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dd2ebbd5-937e-f860-849c-26ecb55b0fff.htm" title="clang_PrintingPolicy_dispose メソッド " tocid="dd2ebbd5-937e-f860-849c-26ecb55b0fff">clang_PrintingPolicy_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f629f285-84d3-968b-a7e2-fe33017b8e28.htm" title="clang_PrintingPolicy_getProperty メソッド " tocid="f629f285-84d3-968b-a7e2-fe33017b8e28">clang_PrintingPolicy_getProperty メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/433f61c6-67b9-0e0f-6c99-6e01ff3e3896.htm" title="clang_PrintingPolicy_setProperty メソッド " tocid="433f61c6-67b9-0e0f-6c99-6e01ff3e3896">clang_PrintingPolicy_setProperty メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/99de092d-924b-2999-d33a-d4cac5693e09.htm" title="clang_Range_isNull メソッド " tocid="99de092d-924b-2999-d33a-d4cac5693e09">clang_Range_isNull メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/856d42d1-8b99-03f0-85ef-67aad904a000.htm" title="clang_remap_dispose メソッド " tocid="856d42d1-8b99-03f0-85ef-67aad904a000">clang_remap_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/792c9660-5589-d4cc-b05b-37b4488d11a3.htm" title="clang_remap_getFilenames メソッド " tocid="792c9660-5589-d4cc-b05b-37b4488d11a3">clang_remap_getFilenames メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c49ef7ed-190d-2b4c-9265-12616f1426f2.htm" title="clang_remap_getNumFiles メソッド " tocid="c49ef7ed-190d-2b4c-9265-12616f1426f2">clang_remap_getNumFiles メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c7e2151c-a154-6707-b54f-b6897f543b24.htm" title="clang_reparseTranslationUnit メソッド " tocid="c7e2151c-a154-6707-b54f-b6897f543b24">clang_reparseTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/12cfd671-98e0-9ac7-0056-7bd40166deb5.htm" title="clang_saveTranslationUnit メソッド " tocid="12cfd671-98e0-9ac7-0056-7bd40166deb5">clang_saveTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/96e3625b-6d1f-073c-9d97-c1ae35c1e540.htm" title="clang_sortCodeCompletionResults メソッド " tocid="96e3625b-6d1f-073c-9d97-c1ae35c1e540">clang_sortCodeCompletionResults メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/38d24626-982e-b688-4a87-52832dcdfec3.htm" title="clang_suspendTranslationUnit メソッド " tocid="38d24626-982e-b688-4a87-52832dcdfec3">clang_suspendTranslationUnit メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ec82803c-49ea-3980-34d7-64eaa4e92411.htm" title="clang_TargetInfo_dispose メソッド " tocid="ec82803c-49ea-3980-34d7-64eaa4e92411">clang_TargetInfo_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c51582fe-a020-afe7-0c0d-249798b8acae.htm" title="clang_TargetInfo_getPointerWidth メソッド " tocid="c51582fe-a020-afe7-0c0d-249798b8acae">clang_TargetInfo_getPointerWidth メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1a8b232e-c461-d4c3-d67f-d051eca5776f.htm" title="clang_TargetInfo_getTriple メソッド " tocid="1a8b232e-c461-d4c3-d67f-d051eca5776f">clang_TargetInfo_getTriple メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cf10b3ff-ee06-3509-1d71-75bd325c3918.htm" title="clang_TextComment_getText メソッド " tocid="cf10b3ff-ee06-3509-1d71-75bd325c3918">clang_TextComment_getText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f2143e54-85d8-dd0c-7895-913cd93ef59b.htm" title="clang_toggleCrashRecovery メソッド " tocid="f2143e54-85d8-dd0c-7895-913cd93ef59b">clang_toggleCrashRecovery メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8d3735b3-87ba-705a-2859-8af299e04eef.htm" title="clang_tokenize メソッド " tocid="8d3735b3-87ba-705a-2859-8af299e04eef">clang_tokenize メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f7d77cab-7bac-9843-a7c7-c94df9953e7b.htm" title="clang_TParamCommandComment_getDepth メソッド " tocid="f7d77cab-7bac-9843-a7c7-c94df9953e7b">clang_TParamCommandComment_getDepth メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/38c51256-3cba-4eab-12f6-0f565ff77210.htm" title="clang_TParamCommandComment_getIndex メソッド " tocid="38c51256-3cba-4eab-12f6-0f565ff77210">clang_TParamCommandComment_getIndex メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b3ad89dc-6433-63f2-835c-1e936f800763.htm" title="clang_TParamCommandComment_getParamName メソッド " tocid="b3ad89dc-6433-63f2-835c-1e936f800763">clang_TParamCommandComment_getParamName メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/085495c9-0877-30df-2f7f-d655ad6cd4e4.htm" title="clang_TParamCommandComment_isParamPositionValid メソッド " tocid="085495c9-0877-30df-2f7f-d655ad6cd4e4">clang_TParamCommandComment_isParamPositionValid メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1929b6f2-4301-e2cf-731d-220f29ba3f95.htm" title="clang_Type_getAlignOf メソッド " tocid="1929b6f2-4301-e2cf-731d-220f29ba3f95">clang_Type_getAlignOf メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/78836480-936a-7a9b-e640-14b45b8dee78.htm" title="clang_Type_getClassType メソッド " tocid="78836480-936a-7a9b-e640-14b45b8dee78">clang_Type_getClassType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/220d5550-3300-4680-2d78-50e96d165553.htm" title="clang_Type_getCXXRefQualifier メソッド " tocid="220d5550-3300-4680-2d78-50e96d165553">clang_Type_getCXXRefQualifier メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6afc9c70-81b1-c0ef-ec77-23db246b0ad0.htm" title="clang_Type_getModifiedType メソッド " tocid="6afc9c70-81b1-c0ef-ec77-23db246b0ad0">clang_Type_getModifiedType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/29b2a3b9-f400-b13d-d691-d7e086bcbc31.htm" title="clang_Type_getNullability メソッド " tocid="29b2a3b9-f400-b13d-d691-d7e086bcbc31">clang_Type_getNullability メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ab7f1247-15a9-c3e5-b417-b9fbaef87695.htm" title="clang_Type_getNumObjCProtocolRefs メソッド " tocid="ab7f1247-15a9-c3e5-b417-b9fbaef87695">clang_Type_getNumObjCProtocolRefs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dbc9eb3b-4826-5a23-c241-933000b87d5a.htm" title="clang_Type_getNumObjCTypeArgs メソッド " tocid="dbc9eb3b-4826-5a23-c241-933000b87d5a">clang_Type_getNumObjCTypeArgs メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0fa6fc74-9ee1-9c1d-3ff2-9e7c275502dc.htm" title="clang_Type_getNumTemplateArguments メソッド " tocid="0fa6fc74-9ee1-9c1d-3ff2-9e7c275502dc">clang_Type_getNumTemplateArguments メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a0b5633e-148d-9ffc-4fbe-966b40272b72.htm" title="clang_Type_getObjCObjectBaseType メソッド " tocid="a0b5633e-148d-9ffc-4fbe-966b40272b72">clang_Type_getObjCObjectBaseType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d538b93f-524b-6c77-b546-2bc626128226.htm" title="clang_Type_getObjCProtocolDecl メソッド " tocid="d538b93f-524b-6c77-b546-2bc626128226">clang_Type_getObjCProtocolDecl メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cc03d695-88fe-1c9b-c2c9-5ca57b8eb0af.htm" title="clang_Type_getObjCTypeArg メソッド " tocid="cc03d695-88fe-1c9b-c2c9-5ca57b8eb0af">clang_Type_getObjCTypeArg メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7e223c38-0831-952b-83c3-3cad94b97895.htm" title="clang_Type_getOffsetOf メソッド " tocid="7e223c38-0831-952b-83c3-3cad94b97895">clang_Type_getOffsetOf メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ff6d9ebf-d1e1-5e9c-cf9b-71af7dfbb3ac.htm" title="clang_Type_getSizeOf メソッド " tocid="ff6d9ebf-d1e1-5e9c-cf9b-71af7dfbb3ac">clang_Type_getSizeOf メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/890c2488-b8b3-a080-34eb-fc31efcc2201.htm" title="clang_Type_getTemplateArgumentAsType メソッド " tocid="890c2488-b8b3-a080-34eb-fc31efcc2201">clang_Type_getTemplateArgumentAsType メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0939ced2-1f7d-90d3-aeeb-a4f21dfb7f4f.htm" title="clang_Type_isTransparentTagTypedef メソッド " tocid="0939ced2-1f7d-90d3-aeeb-a4f21dfb7f4f">clang_Type_isTransparentTagTypedef メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a96e7913-1ae4-0da2-3952-fa2ee01b80ac.htm" title="clang_Type_visitFields メソッド " tocid="a96e7913-1ae4-0da2-3952-fa2ee01b80ac">clang_Type_visitFields メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fc523dd4-6471-d2d1-be3b-c52480171bc8.htm" title="clang_VerbatimBlockLineComment_getText メソッド " tocid="fc523dd4-6471-d2d1-be3b-c52480171bc8">clang_VerbatimBlockLineComment_getText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f67081da-dc8c-38c9-8993-5654a469dadb.htm" title="clang_VerbatimLineComment_getText メソッド " tocid="f67081da-dc8c-38c9-8993-5654a469dadb">clang_VerbatimLineComment_getText メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/97b3a7ee-5f05-acd8-8c44-d138249e9963.htm" title="clang_VirtualFileOverlay_addFileMapping メソッド " tocid="97b3a7ee-5f05-acd8-8c44-d138249e9963">clang_VirtualFileOverlay_addFileMapping メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/053a15de-25f6-645d-bc1f-6a75ce10283e.htm" title="clang_VirtualFileOverlay_create メソッド " tocid="053a15de-25f6-645d-bc1f-6a75ce10283e">clang_VirtualFileOverlay_create メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/85a065bf-1d25-3c03-ff40-1ea11b300fc4.htm" title="clang_VirtualFileOverlay_dispose メソッド " tocid="85a065bf-1d25-3c03-ff40-1ea11b300fc4">clang_VirtualFileOverlay_dispose メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a4ba5bb9-1f96-6c40-e2ee-b6a15473753c.htm" title="clang_VirtualFileOverlay_setCaseSensitivity メソッド " tocid="a4ba5bb9-1f96-6c40-e2ee-b6a15473753c">clang_VirtualFileOverlay_setCaseSensitivity メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/28eb0bd4-bde7-c47b-f082-f81a2ceaf2f3.htm" title="clang_VirtualFileOverlay_writeToBuffer メソッド " tocid="28eb0bd4-bde7-c47b-f082-f81a2ceaf2f3">clang_VirtualFileOverlay_writeToBuffer メソッド </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/88307fa6-594e-c7d6-2165-58078bfbf28b.htm" title="clang_visitChildren メソッド " tocid="88307fa6-594e-c7d6-2165-58078bfbf28b">clang_visitChildren メソッド </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="リサイズはクリックかドラッグ" title="リサイズはクリックかドラッグ" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="リサイズはクリックかドラッグ" title="リサイズはクリックかドラッグ" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>LibClang メソッド</h1></td></tr></table><span class="introStyle"></span> <p><a href="61d25157-394c-121d-aaf1-543efa4183d0.htm">LibClang</a> 型は下記のメンバーを公開します。</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />メソッド</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>名前</th><th>説明</th></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a4ce56bd-dc3d-4bbc-c7b0-3addc9024c12.htm">clang_annotateTokens</a></td><td><div class="summary">
             Annotate the given set of tokens by providing cursors for each token
             that can be mapped to a specific entity within the abstract syntax tree.
            
             This token-annotation routine is equivalent to invoking
             clang_getCursor() for the source locations of each of the
             tokens.The cursors provided are filtered, so that only those
             cursors that have a direct correspondence to the token are
             accepted.For example, given a function call \c f(x),
             clang_getCursor() would provide the following cursors:
            
               * when the cursor is over the 'f', a DeclRefExpr cursor referring to 'f'.
               * when the cursor is over the '(' or the ')', a CallExpr referring to 'f'.
               * when the cursor is over the 'x', a DeclRefExpr cursor referring to 'x'.
            
             Only the first and last of these cursors will occur within the
             annotate, since the tokens "f" and "x' directly refer to a function
             and a variable, respectively, but the parentheses are just a small
             part of the full syntax of the function call expression, which is
             not provided as an annotation.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ce59c8e6-8fb1-dbf6-cdef-1a74e38310a5.htm">clang_BlockCommandComment_getArgText</a></td><td><div class="summary">
            Get Argument Text of Block Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="48262b53-4123-af08-6140-dbc5acd40f1b.htm">clang_BlockCommandComment_getCommandName</a></td><td><div class="summary">
            Get Command Name of Block Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8d103e7c-e907-909b-e93a-76a5866747fb.htm">clang_BlockCommandComment_getNumArgs</a></td><td><div class="summary">
            Get Number of Arguments of Block Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="11fd0e20-2b8c-535b-6ec7-5a591aac50d8.htm">clang_BlockCommandComment_getParagraph</a></td><td><div class="summary">
            Get Paragraph of Block Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="676e5e55-4583-66b5-aadf-086dc484e3a5.htm">clang_codeCompleteAt</a></td><td><div class="summary">
             Perform code completion at a given location in a translation unit.
            
             This function performs code completion at a particular file, line, and
             column within source code, providing results that suggest potential
             code snippets based on the context of the completion.The basic model
             for code completion is that Clang will parse a complete source file,
             performing syntax checking up to the location where code-completion has
             been requested. At that point, a special code-completion token is passed
             to the parser, which recognizes this token and determines, based on the
             current location in the C/Objective-C/C++ grammar and the state of
             semantic analysis, what completions to provide. These completions are
             returned via a new <span class="code">CXCodeCompleteResults</span> structure.
            
             Code completion itself is meant to be triggered by the client when the
             user types punctuation characters or whitespace, at which point the
             code-completion location will coincide with the cursor.For example, if <span class="code" /> p
             is a pointer, code-completion might be triggered after the "-" and then
             after the "&gt;" in <span class="code">p-&gt;</span>. When the code-completion location is after the "&gt;",
             the completion results will provide, e.g., the members of the struct that
             "p" points to.The client is responsible for placing the cursor at the
             beginning of the token currently being typed, then filtering the results
             based on the contents of the token.For example, when code-completing for
             the expression <span class="code">p-&gt;get</span>, the client should provide the location just after
             the "&gt;" (e.g., pointing at the "g") to this code-completion hook. Then, the
             client can filter the results based on the current token text ("get"), only
             showing those results that start with "get". The intent of this interface
             is to separate the relatively high-latency acquisition of code-completion
             results from the filtering of results on a per-character basis, which must
             have a lower latency.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2c037ff7-5eb0-317d-f16a-e200b54ee46b.htm">clang_codeCompleteGetContainerKind</a></td><td><div class="summary">
            Returns the cursor kind for the container for the current code
            completion context.The container is only guaranteed to be set for
            contexts where a container exists (i.e.member accesses or Objective-C
            message sends); if there is not a container, this function will return
            CXCursor_InvalidCode.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="dc7f7884-3397-2863-2aa1-0b974797ab81.htm">clang_codeCompleteGetContainerUSR</a></td><td><div class="summary">
            Returns the USR for the container for the current code completion
            context.If there is not a container for the current context, this
            function will return the empty string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="65ed01fc-8603-8115-b817-46eea7458d38.htm">clang_codeCompleteGetContexts</a></td><td><div class="summary">
            Determines what completions are appropriate for the context
            the given code completion.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="da15f878-a062-564c-3701-978384b839a8.htm">clang_codeCompleteGetDiagnostic</a></td><td><div class="summary">
            Retrieve a diagnostic associated with the given code completion.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="af822cad-d704-fcfd-1730-c2795725bc12.htm">clang_codeCompleteGetNumDiagnostics</a></td><td><div class="summary">
            Determine the number of diagnostics produced prior to the
            location where code completion was performed.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="75c6cb39-60f1-8303-f339-755c1f61af3c.htm">clang_codeCompleteGetObjCSelector</a></td><td><div class="summary">
            Returns the currently-entered selector for an Objective-C message
            send, formatted like "initWithFoo:bar:". Only guaranteed to return a
            non-empty string for CXCompletionContext_ObjCInstanceMessage and
            CXCompletionContext_ObjCClassMessage.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="67945df1-ab9c-b3c2-725c-47a9f8e392f9.htm">clang_Comment_getChild</a></td><td><div class="summary">
            Get Child Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="618d7521-8537-4724-b6bb-55ded76f4aec.htm">clang_Comment_getKind</a></td><td><div class="summary">
            Get Comment Kind
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="dc171662-71df-b48e-c60d-7810f31cd61b.htm">clang_Comment_getNumChildren</a></td><td><div class="summary">
            Get Number of Comment Children
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="418878e8-0c27-3e7a-e02f-0673a6f727a0.htm">clang_Comment_isWhitespace</a></td><td><div class="summary">
             A <span class="code">CXComment_Paragraph</span> node is considered whitespace if it contains
             only <span class="code">CXComment_Text</span> nodes that are empty or whitespace.
            
             Other AST nodes (except <span class="code">CXComment_Paragraph</span> and <span class="code">CXComment_Text</span>) are
             never considered whitespace.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c8d4721e-64c1-df2f-bbbb-9f4ab6aaca0a.htm">clang_CompilationDatabase_dispose</a></td><td><div class="summary">
            Free the given compilation database
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="90b8dc57-6ace-f47c-e64a-b1738fa8ed19.htm">clang_CompilationDatabase_fromDirectory</a></td><td><div class="summary">
             Creates a compilation database from the database found in directory
             buildDir.For example, CMake can output a compile_commands.json which can
             be used to build the database.
            
             It must be freed by <span class="code">clang_CompilationDatabase_dispose()</span>.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0dfccf4b-b765-05f4-1a74-88c561aba7ac.htm">clang_CompilationDatabase_getAllCompileCommands</a></td><td><div class="summary">
            Get all the compile commands in the given compilation database.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d1fe46d3-1115-9581-0b2f-91e1df97be8f.htm">clang_CompilationDatabase_getCompileCommands</a></td><td><div class="summary">
            Find the compile commands used for a file. The compile commands
            must be freed by <span class="code">clang_CompileCommands_dispose()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5b5a1635-9b55-2eda-f31a-c31d084ee897.htm">clang_CompileCommand_getArg</a></td><td><div class="summary">
             Get the I'th argument value in the compiler invocations
            
             Invariant :
              - argument 0 is the compiler executable
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3ca26978-037f-fc1a-fd3b-5ae05a32dbcf.htm">clang_CompileCommand_getDirectory</a></td><td><div class="summary">
            Get the working directory where the CompileCommand was executed from
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="373c993b-07ed-28ca-4d4a-ded3a634e306.htm">clang_CompileCommand_getFilename</a></td><td><div class="summary">
            Get the filename associated with the CompileCommand.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="93d79e67-86a9-af20-1664-5a365db3570b.htm">clang_CompileCommand_getMappedSourceContent</a></td><td><div class="summary">
            Get the I'th mapped source content for the compiler invocation.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cb22458b-45a2-fc59-69ca-6ada56c83255.htm">clang_CompileCommand_getMappedSourcePath</a></td><td><div class="summary">
            Get the I'th mapped source path for the compiler invocation.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f2e33652-3552-d006-a0f0-1b67a1e19592.htm">clang_CompileCommand_getNumArgs</a></td><td><div class="summary">
            Get the number of arguments in the compiler invocation.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6dc01be3-a33a-bc60-f8e0-c7887ee7ed33.htm">clang_CompileCommand_getNumMappedSources</a></td><td><div class="summary">
            Get the number of source mappings for the compiler invocation.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a3e77174-319d-8529-e11a-b80590975386.htm">clang_CompileCommands_dispose</a></td><td><div class="summary">
            Free the given CompileCommands
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f08a483e-4277-b300-d7b3-33c6e548d96e.htm">clang_CompileCommands_getCommand</a></td><td><div class="summary">
            Get the I'th CompileCommand for a file
            Note : 0 &lt;= i &lt; clang_CompileCommands_getSize(CXCompileCommands)
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5f922819-ed4b-df90-a4f1-6b5a8031c0ef.htm">clang_CompileCommands_getSize</a></td><td><div class="summary">
            Get the number of CompileCommand we have for a file
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="56128532-91ff-3016-c770-d853a9c132ea.htm">clang_constructUSR_ObjCCategory</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C category.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="01e0490f-0265-8688-c99b-49d9f525af4b.htm">clang_constructUSR_ObjCClass</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C class.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="81ab7a8f-f53d-c1da-6168-877376e12467.htm">clang_constructUSR_ObjCIvar</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C instance variable and
            the USR for its containing class.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bc6221c0-fadb-bd3d-8f2a-a0b051dbb7a7.htm">clang_constructUSR_ObjCMethod</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C method and
            the USR for its containing class.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="17681792-1108-f928-458c-6130ee3fbfff.htm">clang_constructUSR_ObjCProperty</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C property and the USR
            for its containing class.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="87013e35-29a4-7afa-bc38-add70869de39.htm">clang_constructUSR_ObjCProtocol</a></td><td><div class="summary">
            Construct a USR for a specified Objective-C protocol.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0c7d9b30-b250-7115-c36e-f308916e1e7a.htm">clang_createCXCursorSet</a></td><td><div class="summary">
            Creates an empty CXCursorSet.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="100eb96c-7e1b-533e-ca59-5cb98e026277.htm">clang_createIndex</a></td><td><div class="summary">
             Provides a shared context for creating translation units.
            
             It provides two options:
             - exclude_declarations_from_pch: When non-zero, allows enumeration of "local"
             declarations(when loading any new translation units). A "local" declaration
             is one that belongs in the translation unit itself and not in a precompiled
             header that was used by the translation unit.If zero, all declarations
             will be enumerated.
            
             This process of creating the 'pch', loading it separately, and using it
             (via -include-pch) allows 'exclude_declarations_from_pch' to remove redundant callbacks
             (which gives the indexer the same performance benefit as the compiler).
            
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAA0TK0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAA0TK0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EAAA0TK0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// exclude_declarations_from_pch = 1, display_diagnostics=1</span>
Idx = clang_createIndex(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>);

<span class="highlight-comment">// IndexTest.pch was produced with the following command:</span>
<span class="highlight-comment">// "clang -x c IndexTest.h -emit-ast -o IndexTest.pch"</span>
TU = clang_createTranslationUnit(Idx, <span class="highlight-literal">"IndexTest.pch"</span>);

<span class="highlight-comment">// This will load all the symbols from 'IndexTest.pch'</span>
clang_visitChildren(clang_getTranslationUnitCursor(TU), TranslationUnitVisitor, <span class="highlight-number">0</span>);

clang_disposeTranslationUnit(TU);

<span class="highlight-comment">// This will load all the symbols from 'IndexTest.c', excluding symbols from 'IndexTest.pch'.</span>
<span class="highlight-keyword">char</span>* args[] = { <span class="highlight-literal">"-Xclang"</span>, <span class="highlight-literal">"-include-pch=IndexTest.pch"</span> };

TU = clang_createTranslationUnitFromSourceFile(Idx, <span class="highlight-literal">"IndexTest.c"</span>, <span class="highlight-number">2</span>, args, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

clang_visitChildren(clang_getTranslationUnitCursor(TU), TranslationUnitVisitor, <span class="highlight-number">0</span>);
clang_disposeTranslationUnit(TU);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAA0TK0CDA");</script></div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="650ae66e-9bf0-cd42-7aaa-b6813dad152f.htm">clang_createTranslationUnit</a></td><td><div class="summary">
            Same as <span class="code">clang_createTranslationUnit2()</span>, but returns
            the <span class="code">CXTranslationUnit</span> instead of an error code.
            In case of an error this routine returns a <span class="code">NULL</span><span class="code">CXTranslationUnit</span>,
            without further detailed error codes.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="be7426d6-732e-0911-d6fc-8f0ddd31e8bc.htm">clang_createTranslationUnit2</a></td><td><div class="summary">
            Create a translation unit from an AST file (\c -emit-ast).
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c54e4fc7-dcc8-5ab3-4582-8a38479f5bb8.htm">clang_createTranslationUnitFromSourceFile</a></td><td><div class="summary">
             Return the CXTranslationUnit for a given source file and the provided
             command line arguments one would pass to the compiler.
            
             Note: The 'source_filename' argument is optional.
             If the caller provides a NULL pointer,
             the name of the source file is expected to reside in the
             specified command line arguments.
            
             Note: When encountered in 'clang_command_line_args', the following options
             are ignored:
            
             '-c'
             '-emit-ast'
             '-fsyntax-only'
             '-o &lt;output file&gt;'  (both '-o' and '&lt;output file&gt;' are ignored)
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8c1f1cad-bd1a-e23c-853b-a3ef51abe74e.htm">clang_Cursor_Evaluate</a></td><td><div class="summary">
            If cursor is a statement declaration tries to evaluate the
            statement and if its variable, tries to evaluate its initializer,
            into its corresponding type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f366441b-b3b6-cdd6-8a58-3da487bfd410.htm">clang_Cursor_getArgument</a></td><td><div class="summary">
             Retrieve the argument cursor of a function or method.
            
             The argument cursor can be determined for calls as well as for declarations
             of functions or methods.For other cursors and for invalid indices, an
             invalid cursor is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="17a4ee9f-9239-2ef6-3891-adc1867854be.htm">clang_Cursor_getBriefCommentText</a></td><td><div class="summary">
            Given a cursor that represents a documentable entity (e.g.,
            declaration), return the associated \paragraph; otherwise return the
            first paragraph.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e58ff857-1e6a-a865-bd1b-b579e9a99bf7.htm">clang_Cursor_getCommentRange</a></td><td><div class="summary">
            Given a cursor that represents a declaration, return the associated
            comment's source range.
            The range may include multiple consecutive comments
            with whitespace in between.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e8451ceb-dc68-87f4-9c0c-425455424e73.htm">clang_Cursor_getCxxManglings</a></td><td><div class="summary">
            Retrieve the CXStrings representing the mangled symbols of the C++
            constructor or destructor at the cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9468ab22-1d8e-a5ba-de41-b3aa3ac97fcc.htm">clang_Cursor_getMangling</a></td><td><div class="summary">
            Retrieve the CXString representing the mangled name of the cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1c1b5805-becb-6b04-f159-ec188e1a91d4.htm">clang_Cursor_getModule</a></td><td><div class="summary">
            Given a CXCursor_ModuleImportDecl cursor, return the associated module.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9614eb85-b315-abe4-4a8e-a0333d8d6eea.htm">clang_Cursor_getModuleForFile</a></td><td><div class="summary">
            Given a CXFile header file, return the module that contains it, if one exists.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0555aa94-1656-b3df-ccc1-340742dec33f.htm">clang_Cursor_getNumArguments</a></td><td><div class="summary">
             Retrieve the number of non-variadic arguments associated with a given
             cursor.
            
             The number of arguments can be determined for calls as well as for
             declarations of functions or methods.For other cursors -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cb687582-3b7e-d224-a76e-11bdc2719f52.htm">clang_Cursor_getNumTemplateArguments</a></td><td><div class="summary">
             Returns the number of template args of a function decl representing a
             template specialization.
            
             If the argument cursor cannot be converted into a template function
             declaration, -1 is returned.
            
             For example, for the following declaration and specialization:
             template&lt;typename T, int kInt, bool kBool&gt;
             void foo() { ... }
            
             template&lt;&gt;
             void foo&lt;float, -7, true&gt;();
            
             The value 3 would be returned from this call.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a25cfd7e-b9f5-3baf-b789-d84b5aa40892.htm">clang_Cursor_getObjCDeclQualifiers</a></td><td><div class="summary">
            Given a cursor that represents an Objective-C method or parameter
            declaration, return the associated Objective-C qualifiers for the return
            type or the parameter respectively.The bits are formed from
            <span class="code">CXObjCDeclQualifierKind</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c34fc3a7-db58-cced-8d5e-ba081874ca4a.htm">clang_Cursor_getObjCManglings</a></td><td><div class="summary">
            Retrieve the CXStrings representing the mangled symbols of the ObjC
            class interface or implementation at the cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a9a79802-1da3-471d-11ce-141b2cb0ff77.htm">clang_Cursor_getObjCPropertyAttributes</a></td><td><div class="summary">
            Given a cursor that represents a property declaration, return the
            associated property attributes.The bits are formed from
            <span class="code">CXObjCPropertyAttrKind</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e5c2cd86-0ca6-b3c1-dd75-6c87c0cb1cfd.htm">clang_Cursor_getObjCPropertyGetterName</a></td><td><div class="summary">
            Given a cursor that represents a property declaration, return the
            name of the method that implements the getter.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5469c7ec-db26-9393-bd67-d02607f7aac5.htm">clang_Cursor_getObjCPropertySetterName</a></td><td><div class="summary">
            Given a cursor that represents a property declaration, return the
            name of the method that implements the setter, if any.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="136fc4b5-ce81-b208-6274-6617a3225436.htm">clang_Cursor_getObjCSelectorIndex</a></td><td><div class="summary">
             If the cursor points to a selector identifier in an Objective-C
             method or message expression, this returns the selector index.
            
             After getting a cursor with #clang_getCursor, this can be called to
             determine if the location points to a selector identifier.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d3d14339-528b-5cbc-109b-b6e86322b739.htm">clang_Cursor_getOffsetOfField</a></td><td><div class="summary">
             Return the offset of the field represented by the Cursor.
            
             If the cursor is not a field declaration, -1 is returned.
             If the cursor semantic parent is not a record field declaration,
             CXTypeLayoutError_Invalid is returned.
             If the field's type declaration is an incomplete type,
             CXTypeLayoutError_Incomplete is returned.
             If the field's type declaration is a dependent type,
             CXTypeLayoutError_Dependent is returned.
             If the field's name S is not found,
             CXTypeLayoutError_InvalidFieldName is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0dd8b556-6dd3-cb9a-4d87-17ec2db9dea7.htm">clang_Cursor_getParsedComment</a></td><td><div class="summary">
            Given a cursor that represents a documentable entity (e.g.,
            declaration), return the associated parsed comment as a
            <span class="code">CXComment_FullComment</span> AST node.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ac70998d-d6f6-14f1-e1dc-188a8eabeb9e.htm">clang_Cursor_getRawCommentText</a></td><td><div class="summary">
            Given a cursor that represents a declaration, return the associated
            comment text, including comment markers.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6f40af64-28dc-ed3b-7e63-1efc00aeab0c.htm">clang_Cursor_getReceiverType</a></td><td><div class="summary">
            Given a cursor pointing to an Objective-C message or property
            reference, or C++ method call, returns the CXType of the receiver.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="925a7cc2-624d-ffe7-bd43-5617c053f1a8.htm">clang_Cursor_getSpellingNameRange</a></td><td><div class="summary">
            Retrieve a range for a piece that forms the cursors spelling name.
            Most of the times there is only one range for the complete spelling but for
            Objective-C methods and Objective-C message expressions, there are multiple
            pieces for each selector identifier.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="429c27f4-65cb-924e-6017-f40b9c595966.htm">clang_Cursor_getStorageClass</a></td><td><div class="summary">
             Returns the storage class for a function or variable declaration.
            
             If the passed in Cursor is not a function or variable declaration,
             CX_SC_Invalid is returned else the storage class.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="147fd64d-9262-f1c6-a1cd-4809451e955c.htm">clang_Cursor_getTemplateArgumentKind</a></td><td><div class="summary">
             Retrieve the kind of the I'th template argument of the CXCursor C.
            
             If the argument CXCursor does not represent a FunctionDecl, an invalid
             template argument kind is returned.
            
             For example, for the following declaration and specialization:
             template&lt;typename T, int kInt, bool kBool&gt;
             void foo() { ... }
            
             template&lt;&gt;
             void foo&lt;float, -7, true&gt;();
            
             For I = 0, 1, and 2, Type, Integral, and Integral will be returned,
             respectively.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d2a8ba0d-1914-f5ee-dbd2-256fdd762f9d.htm">clang_Cursor_getTemplateArgumentType</a></td><td><div class="summary">
             Retrieve a CXType representing the type of a TemplateArgument of a
             function decl representing a template specialization.
            
             If the argument CXCursor does not represent a FunctionDecl whose I'th
             template argument has a kind of CXTemplateArgKind_Integral, an invalid type
             is returned.
            
             For example, for the following declaration and specialization:
             template&lt;typename T, int kInt, bool kBool&gt;
             void foo() { ... }
            
             template&lt;&gt;
             void foo&lt;float, -7, true&gt;();
            
             If called with I = 0, "float", will be returned.
             Invalid types will be returned for I == 1 or 2.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="360218ac-eaf1-62b0-2a72-95655772da83.htm">clang_Cursor_getTemplateArgumentUnsignedValue</a></td><td><div class="summary">
             Retrieve the value of an Integral TemplateArgument (of a function
             decl representing a template specialization) as an unsigned long long.
            
             It is undefined to call this function on a CXCursor that does not represent a
             FunctionDecl or whose I'th template argument is not an integral value.
            
             For example, for the following declaration and specialization:
             template&lt;typename T, int kInt, bool kBool&gt;
             void foo() { ... }
            
             template&lt;&gt;
             void foo&lt;float, 2147483649, true&gt;();
            
             If called with I = 1 or 2, 2147483649 or true will be returned, respectively.
             For I == 0, this function's behavior is undefined.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="96d9b93e-33d5-347f-7014-a08f3d3d49e3.htm">clang_Cursor_getTemplateArgumentValue</a></td><td><div class="summary">
             Retrieve the value of an Integral TemplateArgument (of a function
             decl representing a template specialization) as a signed long long.
            
             It is undefined to call this function on a CXCursor that does not represent a
             FunctionDecl or whose I'th template argument is not an integral value.
            
             For example, for the following declaration and specialization:
             template&lt;typename T, int kInt, bool kBool&gt;
             void foo() { ... }
            
             template&lt;&gt;
             void foo&lt;float, -7, true&gt;();
            
             If called with I = 1 or 2, -7 or true will be returned, respectively.
             For I == 0, this function's behavior is undefined.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d764aa71-444b-7079-fdf9-b8669aabe5e8.htm">clang_Cursor_getTranslationUnit</a></td><td><div class="summary">
            Returns the translation unit that a cursor originated from.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="50b23286-ad87-6c5a-2ba4-511cd91494f0.htm">clang_Cursor_hasAttrs</a></td><td><div class="summary">
            Determine whether the given cursor has any attributes.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="39d6123e-108d-c5b4-749c-5cc731f00ddd.htm">clang_Cursor_isAnonymous</a></td><td><div class="summary">
            Determine whether the given cursor represents an anonymous record
            declaration.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7b092d79-17b6-6b1b-d94a-a5e300601742.htm">clang_Cursor_isBitField</a></td><td><div class="summary">
            Returns non-zero if the cursor specifies a Record member that is a
            bitfield.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="df2a25d5-cc63-9898-2872-c5c1ba083e4c.htm">clang_Cursor_isDynamicCall</a></td><td><div class="summary">
             Given a cursor pointing to a C++ method call or an Objective-C
             message, returns non-zero if the method/message is "dynamic", meaning:
            
             For a C++ method: the call is virtual.
             For an Objective-C message: the receiver is an object instance, not 'super'
             or a specific class.
            
             If the method/message is "static" or the cursor does not point to a
             method/message, it will return zero.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d3539e5e-4694-87c1-4534-cc2bb73aec4f.htm">clang_Cursor_isExternalSymbol</a></td><td><div class="summary">
            Returns non-zero if the given cursor points to a symbol marked with
            external_source_symbol attribute.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3c237a9a-a445-1de7-461b-b2f730aa23fd.htm">clang_Cursor_isNull</a></td><td><div class="summary">
            Returns non-zero if <span class="parameter">cursor</span> is null.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9a2c74a1-60f2-5e98-4e63-8c62ecd911ad.htm">clang_Cursor_isObjCOptional</a></td><td><div class="summary">
            Given a cursor that represents an Objective-C method or property
            declaration, return non-zero if the declaration was affected by "@optional".
            Returns zero if the cursor is not such a declaration or it is "@required".
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="eb8d23a5-d1a9-8322-910c-5f6234b40ad0.htm">clang_Cursor_isVariadic</a></td><td><div class="summary">
            Returns non-zero if the given cursor is a variadic function or method.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c7cb1270-263c-498e-63e2-6c00df3892fc.htm">clang_CXCursorSet_contains</a></td><td><div class="summary">
            Queries a CXCursorSet to see if it contains a specific CXCursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="97169acf-a28d-d783-69d9-6eacf118de88.htm">clang_CXCursorSet_insert</a></td><td><div class="summary">
            Inserts a CXCursor into a CXCursorSet.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5bbf0847-7c57-970d-445b-f8069274d7a5.htm">clang_CXIndex_getGlobalOptions</a></td><td><div class="summary">
            Gets the general options associated with a CXIndex.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6fd3e267-d9f9-10f7-d54e-4a9fd81bcddd.htm">clang_CXIndex_setGlobalOptions</a></td><td><div class="summary">
            Sets general options associated with a CXIndex.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAA0JJ0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAA0JJ0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EAAA0JJ0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CXIndex idx = ...;
clang_CXIndex_setGlobalOptions(idx,
  clang_CXIndex_getGlobalOptions(idx) |
    CXGlobalOpt_ThreadBackgroundPriorityForIndexing);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAA0JJ0CDA");</script></div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c32a019b-44c6-5b15-5c37-8da8c93e939a.htm">clang_CXIndex_setInvocationEmissionPathOption</a></td><td><div class="summary">
             Sets the invocation emission path option in a CXIndex.
            
             The invocation emission path specifies a path which will contain log
             files for certain libclang invocations.A null value(default) implies that
             libclang invocations are not logged..
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="49ae6ff6-219e-c074-d6d4-c5f7dc51026a.htm">clang_CXXConstructor_isConvertingConstructor</a></td><td><div class="summary">
            Determine if a C++ constructor is a converting constructor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8da3c26f-c97a-0006-1764-988e2e518df3.htm">clang_CXXConstructor_isCopyConstructor</a></td><td><div class="summary">
            Determine if a C++ constructor is a copy constructor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c66afd8c-aaf3-33fc-36d5-de30c4a2bceb.htm">clang_CXXConstructor_isDefaultConstructor</a></td><td><div class="summary">
            Determine if a C++ constructor is the default constructor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="289855f9-826c-f43b-4339-343fb38bf8a2.htm">clang_CXXConstructor_isMoveConstructor</a></td><td><div class="summary">
            Determine if a C++ constructor is a move constructor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8478fe7d-2f6c-3096-ef2a-354d5f3e2e74.htm">clang_CXXField_isMutable</a></td><td><div class="summary">
            Determine if a C++ field is declared 'mutable'.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="688bda03-1ff6-ee64-c6f1-73e2f2f8946c.htm">clang_CXXMethod_isConst</a></td><td><div class="summary">
            Determine if a C++ member function or member function template is
            declared 'const'.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="835b62db-e97b-b9f8-d3a0-8b554f606437.htm">clang_CXXMethod_isDefaulted</a></td><td><div class="summary">
            Determine if a C++ method is declared '= default'.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0c3d62da-7d72-eb9b-f62a-973c395b1764.htm">clang_CXXMethod_isPureVirtual</a></td><td><div class="summary">
            Determine if a C++ member function or member function template is pure virtual.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="41bc932b-f09f-19cd-fbf4-561ebbeeae87.htm">clang_CXXMethod_isStatic</a></td><td><div class="summary">
            Determine if a C++ member function or member function template is declared 'static'.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="88b77aae-8f93-f677-a4e1-a5f4879c64d0.htm">clang_CXXMethod_isVirtual</a></td><td><div class="summary">
            Determine if a C++ member function or member function template is
            explicitly declared 'virtual' or if it overrides a virtual method from
            one of the base classes.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5eac569b-f9e2-ba96-b24a-0d96c69252db.htm">clang_CXXRecord_isAbstract</a></td><td><div class="summary">
            Determine if a C++ record is abstract, i.e. whether a class or struct
            has a pure virtual member function.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d7b677ca-92c7-527a-117f-e81d04bd213b.htm">clang_defaultCodeCompleteOptions</a></td><td><div class="summary">
            Returns a default set of code-completion options that can be
            passed to <span class="code">clang_codeCompleteAt()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2b61712b-ecae-3029-6fd9-4e1585b1fb87.htm">clang_defaultDiagnosticDisplayOptions</a></td><td><div class="summary">
            Retrieve the set of display options most similar to the
            default behavior of the clang compiler.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d92f0366-5084-8e95-b795-ee93cc1dc36e.htm">clang_defaultEditingTranslationUnitOptions</a></td><td><div class="summary">
             Returns the set of flags that is suitable for parsing a translation
             unit that is being edited.
            
             The set of flags returned provide options for <span class="code">clang_parseTranslationUnit()</span>
             to indicate that the translation unit is likely to be reparsed many times,
             either explicitly (via <span class="code">clang_reparseTranslationUnit()</span>) or implicitly
             (e.g., by code completion(<span class="code">clang_codeCompletionAt()</span>)).
             The returned flag set contains an unspecified set of optimizations
             (e.g., the precompiled preamble) geared toward improving the performance of these routines.
             The set of optimizations enabled may change from one version to the next.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a3b987a6-f6e5-25d8-4ad8-44671135b263.htm">clang_defaultReparseOptions</a></td><td><div class="summary">
             Returns the set of flags that is suitable for reparsing a translation
             unit.
            
             The set of flags returned provide options for
             <span class="code">clang_reparseTranslationUnit()</span> by default. The returned flag
             set contains an unspecified set of optimizations geared toward common uses
             of reparsing.The set of optimizations enabled may change from one version
             to the next.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e93000fa-b082-c81f-6a8d-ea781b09549d.htm">clang_defaultSaveOptions</a></td><td><div class="summary">
             Returns the set of flags that is suitable for saving a translation
             unit.
            
             The set of flags returned provide options for
             <span class="code">clang_saveTranslationUnit()</span> by default. The returned flag
             set contains an unspecified set of options that save translation units with
             the most commonly-requested data.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5ecb2060-0aa8-a2c0-254b-62f4967785a0.htm">clang_disposeCodeCompleteResults</a></td><td><div class="summary">
            Free the given set of code-completion results.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7a974241-9225-d6d1-58c8-6eb0dbd1c892.htm">clang_disposeCXCursorSet</a></td><td><div class="summary">
            Disposes a CXCursorSet and releases its associated memory.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bf0f30d3-7f6d-8473-7022-298daf500155.htm">clang_disposeCXPlatformAvailability</a></td><td><div class="summary">
            Free the memory associated with a <span class="code">CXPlatformAvailability</span> structure.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6dcb3dc1-459a-5294-4e3a-eceebb7eeede.htm">clang_disposeCXTUResourceUsage</a></td><td><div class="summary">
            Dispose Translation Unit Resource Usage object.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ab3923e4-2e63-7dae-6721-08411f2f268b.htm">clang_disposeDiagnostic</a></td><td><div class="summary">
            Destroy a diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8e194244-142c-a9a3-aa0d-c139f01e5cee.htm">clang_disposeDiagnosticSet</a></td><td><div class="summary">
            Release a CXDiagnosticSet and all of its contained diagnostics.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="301e99db-0585-67fe-d4bc-6ec2a31c1378.htm">clang_disposeIndex</a></td><td><div class="summary">
            Destroy the given index.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f31cbc4a-24df-6330-5173-1a3aedc79d00.htm">clang_disposeOverriddenCursors</a></td><td><div class="summary">
            Free the set of overridden cursors returned by
            <span class="code">clang_getOverriddenCursors()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8487036f-ae60-c690-ac55-7bb467a240cf.htm">clang_disposeSourceRangeList</a></td><td><div class="summary">
            Destroy the given <span class="code">CXSourceRangeList</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="449c4eac-220f-8ae0-9fae-6a79a98270ab.htm">clang_disposeString</a></td><td><div class="summary">
            Free the given string
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c3007fd7-b85f-c15c-feb3-2bb945d243d4.htm">clang_disposeStringSet</a></td><td><div class="summary">
            Free the given string set
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="89bf63ba-2004-c580-5d81-4cb5ee9bdaaa.htm">clang_disposeTokens</a></td><td><div class="summary">
            Free the given set of tokens.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="89eba98f-62fc-3dce-9cc9-e86fa1c589e5.htm">clang_disposeTranslationUnit</a></td><td><div class="summary">
            Destroy the specified CXTranslationUnit object.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4b6ade0e-b645-be72-5407-9f4df52276a0.htm">clang_enableStackTraces</a></td><td><div class="summary">
            Enable Stack Traces
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e8c565b5-3dcc-3aae-4939-58a8c09b37b7.htm">clang_EnumDecl_isScoped</a></td><td><div class="summary">
            Determine if an enum declaration refers to a scoped enum.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a1b55133-3957-ac28-42e6-4f15a3994566.htm">clang_equalCursors</a></td><td><div class="summary">
            Determine whether two cursors are equivalent.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="105174d4-b2e9-7519-2043-1709542e2edf.htm">clang_equalLocations</a></td><td><div class="summary">
            Determine whether two source locations, which must refer into
            the same translation unit, refer to exactly the same point in the
            source code.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="eba67bce-65a1-3fc3-2e87-0730233ed100.htm">clang_equalRanges</a></td><td><div class="summary">
            Determine whether two ranges are equivalent.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="34d1e89b-c305-7a8f-dd46-e88f83805cfc.htm">clang_equalTypes</a></td><td><div class="summary">
            Determine whether two CXTypes represent the same type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="67ca053a-17c9-11b6-428a-69ec886d85b0.htm">clang_EvalResult_dispose</a></td><td><div class="summary">
            Disposes the created Eval memory.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f25885a9-0b27-a9dc-e1d3-ae5d79e05434.htm">clang_EvalResult_getAsDouble</a></td><td><div class="summary">
            Returns the evaluation result as double if the kind is double.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8287903e-cb40-a64a-09f3-db959851e8a0.htm">clang_EvalResult_getAsInt</a></td><td><div class="summary">
            Returns the evaluation result as integer if the kind is Int.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5dff3d0b-c234-aef5-bcdf-b2315864e65b.htm">clang_EvalResult_getAsLongLong</a></td><td><div class="summary">
            Returns the evaluation result as a long long integer if the
            kind is Int. This prevents overflows that may happen if the result is
            returned with <span class="code">clang_EvalResult_getAsInt()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="20b95b1a-67a9-227c-a91e-4fd6af5059d2.htm">clang_EvalResult_getAsStr</a></td><td><div class="summary">
            Returns the evaluation result as a constant string if the
            kind is other than Int or float. User must not free this pointer,
            instead call <span class="code">clang_EvalResult_dispose()</span> on the <span class="code">CXEvalResult</span> returned
            by <span class="code">clang_Cursor_Evaluate()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="da7b132c-3a37-9571-9998-b3aa56db47c8.htm">clang_EvalResult_getAsUnsigned</a></td><td><div class="summary">
            Returns the evaluation result as an unsigned integer if
            the kind is Int and <span class="code">clang_EvalResult_isUnsignedInt</span> is non-zero.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="80b6e850-3c21-47ef-9bbc-a8d19790eff0.htm">clang_EvalResult_getKind</a></td><td><div class="summary">
            Returns the kind of the evaluated result.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4b501cf7-fbab-d021-82f0-c4f2095f5ee3.htm">clang_EvalResult_isUnsignedInt</a></td><td><div class="summary">
            Returns a non-zero value if the kind is Int and the evaluation
            result resulted in an unsigned integer.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d172d77b-a05d-3e60-665b-cc7575e6f083.htm">clang_executeOnThread</a></td><td><div class="summary">
            Execute Function On Thread
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d42df471-827e-d8cf-f9a5-f9e3cf435b60.htm">clang_File_isEqual</a></td><td><div class="summary">
            Returns non-zero if the <span class="code">file1</span> and <span class="code">file2</span> point to the same file,
            or they are both NULL.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3df01619-1bb6-5f3b-842d-d4b137f71ef5.htm">clang_File_tryGetRealPathName</a></td><td><div class="summary">
             Returns the real path name of <span class="code">file</span>.
            
             An empty string may be returned. Use <span class="code">clang_getFileName()</span> in that case.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c8202ea5-8463-ef9e-8822-adb1b5fae78f.htm">clang_findIncludesInFile</a></td><td><div class="summary">
            Find #import/#include directives in a specific file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="737dafc4-0d54-cf68-6a3c-33af15697386.htm">clang_findReferencesInFile</a></td><td><div class="summary">
            Find references of a declaration in a specific file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="279f601c-99c6-5d04-098a-3462c109c913.htm">clang_formatDiagnostic</a></td><td><div class="summary">
             Format the given diagnostic in a manner that is suitable for display.
            
             This routine will format the given diagnostic to a string, rendering
             the diagnostic according to the various options given.The
             <span class="code">clang_defaultDiagnosticDisplayOptions()</span> function returns the set of
             options that most closely mimics the behavior of the clang compiler.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ef241973-fd4b-4eaf-2efd-cc5a84cae530.htm">clang_free</a></td><td><div class="summary">
            Free Character Buffer
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d5fff5dc-ce2d-2f05-ed61-c4ebaa2e7558.htm">clang_FullComment_getAsHTML</a></td><td><div class="summary">
             Convert a given full parsed comment to an HTML fragment.
            
             Specific details of HTML layout are subject to change.Don't try to parse
             this HTML back into an AST, use other APIs instead.
            
             Currently the following CSS classes are used:
             \li "para-brief" for \paragraph and equivalent commands;
             \li "para-returns" for \\returns paragraph and equivalent commands;
             \li "word-returns" for the "Returns" word in \\returns paragraph.
            
             Function argument documentation is rendered as a \&lt;dl\&gt; list with arguments
             sorted in function prototype order.CSS classes used:
             \li "param-name-index-NUMBER" for parameter name (\&lt;dt\&gt;);
             \li "param-descr-index-NUMBER" for parameter description(\&lt;dd\&gt;);
             \li "param-name-index-invalid" and "param-descr-index-invalid" are used if
             parameter index is invalid.
            
             Template parameter documentation is rendered as a \&lt;dl\&gt; list with
             parameters sorted in template parameter list order.CSS classes used:
             \li "tparam-name-index-NUMBER" for parameter name (\&lt;dt\&gt;);
             \li "tparam-descr-index-NUMBER" for parameter description(\&lt;dd\&gt;);
             \li "tparam-name-index-other" and "tparam-descr-index-other" are used for
             names inside template template parameters;
             \li "tparam-name-index-invalid" and "tparam-descr-index-invalid" are used if
             parameter position is invalid.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="80e228dc-bd37-f935-7831-c938ce43af38.htm">clang_FullComment_getAsXML</a></td><td><div class="summary">
             Convert a given full parsed comment to an XML document.
            
             A Relax NG schema for the XML can be found in comment-xml-schema.rng file
             inside clang source tree.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7c69cc3a-33ae-0d92-b15b-a26b78a43e2e.htm">clang_getAddressSpace</a></td><td><div class="summary">
            Returns the address space of the given type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="50a9e9a1-423d-2979-ebf5-036fd9dea4eb.htm">clang_getAllSkippedRanges</a></td><td><div class="summary">
            Retrieve all ranges from all files that were skipped by the
            preprocessor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="785090fe-fa77-ca61-31b5-112bacace0d5.htm">clang_getArgType</a></td><td><div class="summary">
             Retrieve the type of a parameter of a function type.
            
             If a non-function type is passed in or the function does not have enough
             parameters, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="71379251-c3a2-c8f9-8666-19bef26ebc2e.htm">clang_getArrayElementType</a></td><td><div class="summary">
             Return the element type of an array type.
            
             If a non-array type is passed in, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="94284874-9f52-9541-26a4-354992abd326.htm">clang_getArraySize</a></td><td><div class="summary">
             Return the array size of a constant array.
            
             If a non-array type is passed in, -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7a5033ae-1035-e60c-1c41-9a3841db18d0.htm">clang_getBuildSessionTimestamp</a></td><td><div class="summary"><p>Get Build Session Timestamp</p><p>ビルドセッションタイムスタンプの取得</p></div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e44cdecc-81a7-5018-ca98-1647100589ea.htm">clang_getCanonicalCursor</a></td><td><div class="summary">
             Retrieve the canonical cursor corresponding to the given cursor.
            
             In the C family of languages, many kinds of entities can be declared several
             times within a single translation unit.For example, a structure type can
             be forward-declared(possibly multiple times) and later defined:
            
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADA0NH0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADA0NH0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EADA0NH0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">struct</span> X;
<span class="highlight-keyword">struct</span> X;
<span class="highlight-keyword">struct</span> X
{
    <span class="highlight-keyword">int</span> member;
};</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADA0NH0CDA");</script>
            
             The declarations and the definition of <span class="code">X</span> are represented by three
             different cursors, all of which are declarations of the same underlying
             entity.One of these cursor is considered the "canonical" cursor, which
             is effectively the representative for the underlying entity.One can
             determine if two cursors are declarations of the same underlying entity by
             comparing their canonical cursors.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3ee8753e-9dbd-5d33-64e8-732906e8d370.htm">clang_getCanonicalType</a></td><td><div class="summary">
             Return the canonical type for a CXType.
            
             Clang's type system explicitly models typedefs and all the ways
             a specific type can be represented.The canonical type is the underlying
             type with all the "sugar" removed.For example, if 'T' is a typedef
             for 'int', the canonical type for 'T' would be 'int'.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f2fb33cf-ff49-677a-6a75-7faf0b3d0fdb.htm">clang_getChildDiagnostics</a></td><td><div class="summary">
             Retrieve the child diagnostics of a CXDiagnostic.
            
             This CXDiagnosticSet does not need to be released by
             <span class="code">clang_disposeDiagnosticSet()</span>.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="175b1726-2121-1f0d-235a-36fcc9e945c4.htm">clang_getClangVersion</a></td><td><div class="summary">
            Return a version string, suitable for showing to a user, but not
            intended to be parsed (the format is not guaranteed to be stable).
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="964ffa5b-813d-2c50-4b32-4145340487ec.htm">clang_getCompletionAnnotation</a></td><td><div class="summary">
            Retrieve the annotation associated with the given completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d870dcb4-866c-88de-d308-8e042902aed0.htm">clang_getCompletionAvailability</a></td><td><div class="summary">
            Determine the availability of the entity that this code-completion
            string refers to.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="92469717-a481-c6a2-8a63-5976334cff12.htm">clang_getCompletionBriefComment</a></td><td><div class="summary">
            Retrieve the brief documentation comment attached to the declaration
            that corresponds to the given completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="00582135-a48e-7aba-2d5c-099267f8a46b.htm">clang_getCompletionChunkCompletionString</a></td><td><div class="summary">
            Retrieve the completion string associated with a particular chunk within a completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="54d73650-66fa-4e35-9a87-d31f9d7666e2.htm">clang_getCompletionChunkKind</a></td><td><div class="summary">
            Determine the kind of a particular chunk within a completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9f2d4e9d-dd31-5f45-3748-1ecd5fec646d.htm">clang_getCompletionChunkText</a></td><td><div class="summary">
            Retrieve the text associated with a particular chunk within a completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4d441ed8-6472-762c-ff85-d7975caf5b28.htm">clang_getCompletionFixIt</a></td><td><div class="summary">
             Fix-its that *must* be applied before inserting the text for the
             corresponding completion.
            
             By default, <span class="code">clang_codeCompleteAt()</span> only returns completions with empty
             fix-its.Extra completions with non-empty fix-its should be explicitly
             requested by setting CXCodeComplete_IncludeCompletionsWithFixIts.
            
             For the clients to be able to compute position of the cursor after applying
             fix-its, the following conditions are guaranteed to hold for
             replacement_range of the stored fix-its:
              - Ranges in the fix-its are guaranteed to never contain the completion
              point (or identifier under completion point, if any) inside them, except
              at the start or at the end of the range.
              - If a fix-it range starts or ends with completion point (or starts or
              ends after the identifier under completion point), it will contain at
              least one character.It allows to unambiguously recompute completion
              point after applying the fix-it.
            
             The intuition is that provided fix-its change code around the identifier we
             complete, but are not allowed to touch the identifier itself or the
             completion point.One example of completions with corrections are the ones
             replacing '.' with '-&gt;' and vice versa:
            
             std::unique_ptr&lt;std::vector&lt;int&gt;&gt; vec_ptr;
             In 'vec_ptr.^', one of the completions is 'push_back', it requires
             replacing '.' with '-&gt;'.
             In 'vec_ptr-&gt;^', one of the completions is 'release', it requires
             replacing '-&gt;' with '.'.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="425be485-280c-f07f-66cc-77854d4758a9.htm">clang_getCompletionNumAnnotations</a></td><td><div class="summary">
            Retrieve the number of annotations associated with the given completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b9cf32ef-552c-f034-2788-40467cde5bb9.htm">clang_getCompletionNumFixIts</a></td><td><div class="summary">
             Retrieve the number of fix-its for the given completion index.
            
             Calling this makes sense only if CXCodeComplete_IncludeCompletionsWithFixIts
             option was set.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e8cede48-29be-5be8-b694-79e93c51375e.htm">clang_getCompletionParent</a></td><td><div class="summary">
            Retrieve the parent context of the given completion string.
            The parent context of a completion string is the semantic parent of
            the declaration(if any) that the code completion represents.For example,
            a code completion for an Objective-C method would have the method's class
            or protocol as its context.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="947db5fc-da49-f313-e62e-279403bfd11a.htm">clang_getCompletionPriority</a></td><td><div class="summary">
             Determine the priority of this code completion.
            
             The priority of a code completion indicates how likely it is that this
             particular completion is the completion that the user will select.
             The priority is selected by various internal heuristics.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bcee87cf-46f7-7a91-afe8-62cd77e02b61.htm">clang_getCString</a></td><td><div class="summary">
            Retrieve the character data associated with the given string
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6ee03627-0c63-6cd8-fbb4-6b942cb1ab25.htm">clang_getCursor</a></td><td><div class="summary">
             Map a source location to the cursor that describes the entity at that
             location in the source code.
            
             <span class="code">clang_getCursor()</span> maps an arbitrary source location within a translation
             unit down to the most specific cursor that describes the entity at that
             location.
             For example, given an expression <span class="code">x + y</span>, invoking
             <span class="code">clang_getCursor()</span> with a source location pointing to "x" will return the
             cursor for "x"; similarly for "y".
             If the cursor points anywhere between "x" or "y" (e.g., on the + or the whitespace around it),
             <span class="code">clang_getCursor()</span> will return a cursor referring to the "+" expression.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e4d4d609-69ef-aa56-1d13-128015d16507.htm">clang_getCursorAvailability</a></td><td><div class="summary">
            Determine the availability of the entity that this cursor refers to,
            taking the current target platform into account.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="22c8bc56-7e11-3d79-947b-4c4bedec8d90.htm">clang_getCursorCompletionString</a></td><td><div class="summary">
            Retrieve a completion string for an arbitrary declaration or macro definition cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ec2519ea-0fb1-5c7e-3dbc-1e9e9780ae66.htm">clang_getCursorDefinition</a></td><td><div class="summary">
             For a cursor that is either a reference to or a declaration
             of some entity, retrieve a cursor that describes the definition of
             that entity.
            
             Some entities can be declared multiple times within a translation
             unit, but only one of those declarations can also be a
             definition.For example, given:
            
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADA01G0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADA01G0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EADA01G0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">int</span> f(<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>);
<span class="highlight-keyword">int</span> g(<span class="highlight-keyword">int</span> x, <span class="highlight-keyword">int</span> y) { <span class="highlight-keyword">return</span> f(x, y); }
<span class="highlight-keyword">int</span> f(<span class="highlight-keyword">int</span> a, <span class="highlight-keyword">int</span> b) { <span class="highlight-keyword">return</span> a + b; }
<span class="highlight-keyword">int</span> f(<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADA01G0CDA");</script>
            
             there are three declarations of the function "f", but only the
             second one is a definition.The <span class="code">clang_getCursorDefinition()</span>
             function will take any cursor pointing to a declaration of "f"
             (the first or fourth lines of the example) or a cursor referenced
             that uses "f" (the call to "f' inside "g") and will return a
             declaration cursor pointing to the definition(the second "f"
             declaration).
            
             If given a cursor for which there is no corresponding definition,
             e.g., because there is no definition of that entity within this
             translation unit, returns a NULL cursor.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ef854996-1075-2690-86b1-36023a85ab56.htm">clang_getCursorDisplayName</a></td><td><div class="summary">
             Retrieve the display name for the entity referenced by this cursor.
            
             The display name contains extra information that helps identify the cursor,
             such as the parameters of a function or template or the arguments of a
             class template specialization.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="093e2e50-9f36-0c5a-6dae-c20f792369de.htm">clang_getCursorExceptionSpecificationType</a></td><td><div class="summary">
             Retrieve the exception specification type associated with a given cursor.
             This is a value of type CXCursor_ExceptionSpecificationKind.
            
             This only returns a valid result if the cursor refers to a function or method.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9c4ac8e0-b151-7c9f-4cfb-72c4bb254690.htm">clang_getCursorExtent</a></td><td><div class="summary">
             Retrieve the physical extent of the source construct referenced by
             the given cursor.
            
             The extent of a cursor starts with the file/line/column pointing at the
             first character within the source construct that the cursor refers to and
             ends with the last character within that source construct.For a
             declaration, the extent covers the declaration itself.For a reference,
             the extent covers the location of the reference (e.g., where the referenced
             entity was actually used).
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="12d30714-dbf5-ab95-60a1-eb9ce73e3fa8.htm">clang_getCursorKind</a></td><td><div class="summary">
            Retrieve the kind of the given cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3805a56c-7728-c33e-1b29-809f67ce8758.htm">clang_getCursorKindSpelling</a></td><td><div class="summary">
            Get Cursor Kind Spelling
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cf5e19f1-65b5-da9f-15c1-bb61f98c865c.htm">clang_getCursorLanguage</a></td><td><div class="summary">
            Determine the "language" of the entity referred to by a given cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fcbfb714-5bc0-604e-d5fc-9d4bc5d31f42.htm">clang_getCursorLexicalParent</a></td><td><div class="summary">
             Determine the lexical parent of the given cursor.
            
             The lexical parent of a cursor is the cursor in which the given <span class="parameter">cursor</span>
             was actually written.For many declarations, the lexical and semantic parents
             are equivalent(the semantic parent is returned by
             <span class="code">clang_getCursorSemanticParent()</span>).
             They diverge when declarations or
             definitions are provided out-of-line.For example:
            
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAPA0TG0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAPA0TG0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EAPA0TG0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> C
 {
 <span class="highlight-keyword">void</span> f();
};

<span class="highlight-keyword">void</span> C::f() { }</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAPA0TG0CDA");</script>
            
             In the out-of-line definition of <span class="code">C::f</span>, the semantic parent is
             the class <span class="code">C</span>, of which this function is a member. The lexical parent is
             the place where the declaration actually occurs in the source code; in this
             case, the definition occurs in the translation unit.In general, the
             lexical parent for a given entity can change without affecting the semantics
             of the program, and the lexical parent of different declarations of the
             same entity may be different. Changing the semantic parent of a declaration,
             on the other hand, can have a major impact on semantics, and redeclarations
             of a particular entity should all have the same semantic context.
            
             In the example above, both declarations of <span class="code">C::f</span> have <span class="code">C</span> as their
             semantic context, while the lexical context of the first <span class="code">C::f</span> is <span class="code">C</span>
             and the lexical context of the second <span class="code">C::f</span> is the translation unit.
            
             For declarations written in the global scope, the lexical parent is
             the translation unit.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c5444289-2231-1057-b84c-e0240b18abb4.htm">clang_getCursorLinkage</a></td><td><div class="summary">
            Determine the linkage of the entity referred to by a given cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f11f5207-4ab1-62db-2722-794db0b38a2c.htm">clang_getCursorLocation</a></td><td><div class="summary">
             Retrieve the physical location of the source constructor referenced
             by the given cursor.
            
             The location of a declaration is typically the location of the name of that
             declaration, where the name of that declaration would occur if it is
             unnamed, or some keyword that introduces that particular declaration.
             The location of a reference is where that reference occurs within the
             source code.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bd709db7-ae5d-1bc9-067a-65f41c0675f6.htm">clang_getCursorPlatformAvailability</a></td><td><div class="summary">
            Determine the availability of the entity that this cursor refers to
            on any platforms for which availability information is known.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0218a961-a6b9-6e09-4a74-08914c9acce4.htm">clang_getCursorPrettyPrinted</a></td><td><div class="summary">
            Pretty print declarations.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8bbd656b-f1e2-2479-6bae-acd53fb5f3a5.htm">clang_getCursorPrintingPolicy</a></td><td><div class="summary">
             Retrieve the default policy for the cursor.
            
             The policy should be released after use with
             <span class="code">clang_PrintingPolicy_dispose()</span>.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="98054169-bc2a-5029-ecf4-b539096be2cc.htm">clang_getCursorReferenced</a></td><td><div class="summary">
             For a cursor that is a reference, retrieve a cursor representing the
             entity that it references.
            
             Reference cursors refer to other entities in the AST. For example, an
             Objective-C superclass reference cursor refers to an Objective-C class.
             This function produces the cursor for the Objective-C class from the
             cursor for the superclass reference.If the input cursor is a declaration or
             definition, it returns that declaration or definition unchanged.
             Otherwise, returns the NULL cursor.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fc528126-a98c-34d4-ec14-6677bdf7d900.htm">clang_getCursorReferenceNameRange</a></td><td><div class="summary">
            Given a cursor that references something else, return the source range
            covering that reference.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7d7b52cc-e604-a039-c451-13220c794dab.htm">clang_getCursorResultType</a></td><td><div class="summary">
             Retrieve the return type associated with a given cursor.
            
             This only returns a valid type if the cursor refers to a function or method.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e394f757-22f7-b46e-7452-747eaa9b50e0.htm">clang_getCursorSemanticParent</a></td><td><div class="summary">
             Determine the semantic parent of the given cursor.
            
             The semantic parent of a cursor is the cursor that semantically contains
             the given <span class="parameter">cursor</span>.For many declarations, the lexical and semantic parents
             are equivalent (the lexical parent is returned by
             <span class="code">clang_getCursorLexicalParent()</span>). They diverge when declarations or
             definitions are provided out-of-line.For example:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAPA0KG0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAPA0KG0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EAPA0KG0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> C
 {
 <span class="highlight-keyword">void</span> f();
};

<span class="highlight-keyword">void</span> C::f() { }</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAPA0KG0CDA");</script>
            
             In the out-of-line definition of <span class="code">C::f</span>, the semantic parent is
             the class <span class="code">C</span>, of which this function is a member. The lexical parent is
             the place where the declaration actually occurs in the source code; in this
             case, the definition occurs in the translation unit.In general, the
             lexical parent for a given entity can change without affecting the semantics
             of the program, and the lexical parent of different declarations of the
             same entity may be different. Changing the semantic parent of a declaration,
             on the other hand, can have a major impact on semantics, and redeclarations
             of a particular entity should all have the same semantic context.
            
             In the example above, both declarations of <span class="code">C::f</span> have <span class="code">C</span> as their
             semantic context, while the lexical context of the first <span class="code">C::f</span> is <span class="code">C</span>
             and the lexical context of the second <span class="code">C::f</span> is the translation unit.
            
             For global declarations, the semantic parent is the translation unit.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d6286594-e167-9675-4948-127a5205aee4.htm">clang_getCursorSpelling</a></td><td><div class="summary">
            Retrieve a name for the entity referenced by this cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2bd6b086-cf1a-0645-c95d-3b2021b47ffb.htm">clang_getCursorTLSKind</a></td><td><div class="summary">
            Determine the "thread-local storage (TLS) kind" of the declaration
            referred to by a cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="36a96438-dfa7-d1c4-02b9-fc7bb24d0922.htm">clang_getCursorType</a></td><td><div class="summary">
            Retrieve the type of a CXCursor (if any).
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3ea4a123-6bfd-6347-50dc-cdd5d8db2d68.htm">clang_getCursorUSR</a></td><td><div class="summary">
             Retrieve a Unified Symbol Resolution (USR) for the entity referenced
             by the given cursor.
            
             A Unified Symbol Resolution (USR) is a string that identifies a particular
             entity (function, class, variable, etc.) within a program.USRs can be
             compared across translation units to determine, e.g., when references in
             one translation refer to an entity defined in another translation unit.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2b94364b-3437-cf0f-c1b8-7a871ed1162b.htm">clang_getCursorVisibility</a></td><td><div class="summary">
             Describe the visibility of the entity referred to by a cursor.
            
             This returns the default visibility if not explicitly specified by
             a visibility attribute.The default visibility may be changed by
             commandline arguments.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b9d87f23-726b-efd9-f65a-121f38264a40.htm">clang_getCXTUResourceUsage</a></td><td><div class="summary">
            Return the memory usage of a translation unit.  This object
            should be released with <span class="code">clang_disposeCXTUResourceUsage()</span>.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1b1b9c8d-434b-cd10-9d22-04e9417e63a2.htm">clang_getCXXAccessSpecifier</a></td><td><div class="summary">
             Returns the access control level for the referenced object.
            
             If the cursor refers to a C++ declaration, its access control level within its
             parent scope is returned.Otherwise, if the cursor refers to a base specifier or
             access specifier, the specifier itself is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="906ae883-96cd-9e57-cdc9-c70254ada705.htm">clang_getDeclObjCEncoding</a></td><td><div class="summary">
            Returns the Objective-C type encoding for the specified CXType.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="62bb2a3f-335a-041f-2ca3-f52da3256a4e.htm">clang_getDeclObjCTypeEncoding</a></td><td><div class="summary">
            Returns the Objective-C type encoding for the specified declaration.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="35b1996b-fe51-7146-311d-7100d528a4da.htm">clang_getDefinitionSpellingAndExtent</a></td><td><div class="summary">
            Get Definition Spelling And Extent
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="40875a5c-05ac-f388-84d9-cc4b3488d626.htm">clang_getDiagnostic</a></td><td><div class="summary">
            Retrieve a diagnostic associated with the given translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c4270197-d452-ff76-06f3-640de8e06e34.htm">clang_getDiagnosticCategory</a></td><td><div class="summary">
             Retrieve the category number for this diagnostic.
            
             Diagnostics can be categorized into groups along with other, related
             diagnostics(e.g., diagnostics under the same warning flag). This routine
             retrieves the category number for the given diagnostic.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3cd07cc6-f1a7-a381-98b2-3e796b57a843.htm">clang_getDiagnosticCategoryName</a></td><td><div class="summary">
            Retrieve the name of a particular diagnostic category.
            This is now deprecated.
            Use <span class="code">clang_getDiagnosticCategoryText()</span> instead.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="43bbd92e-2584-6ac0-7617-3100793b6261.htm">clang_getDiagnosticCategoryText</a></td><td><div class="summary">
            Retrieve the diagnostic category text for a given diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="908035a9-7255-5969-5ae7-bbb770a2b42a.htm">clang_getDiagnosticFixIt</a></td><td><div class="summary">
             Retrieve the replacement information for a given fix-it.
            
             Fix-its are described in terms of a source range whose contents
             should be replaced by a string. This approach generalizes over
             three kinds of operations: removal of source code(the range covers
             the code to be removed and the replacement string is empty),
             replacement of source code(the range covers the code to be
             replaced and the replacement string provides the new code), and
             insertion(both the start and end of the range point at the
             insertion location, and the replacement string provides the text to
             insert).
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4fa7689f-1c63-6d9b-b2f8-1e3fe069ac00.htm">clang_getDiagnosticInSet</a></td><td><div class="summary">
            Retrieve a diagnostic associated with the given CXDiagnosticSet.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="eb263224-be9f-8659-5d2f-c8c67eb5ccc2.htm">clang_getDiagnosticLocation</a></td><td><div class="summary">
             Retrieve the source location of the given diagnostic.
            
             This location is where Clang would print the caret('^') when
             displaying the diagnostic on the command line.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="795b67de-006d-7d6a-ccf9-fed92d17c85c.htm">clang_getDiagnosticNumFixIts</a></td><td><div class="summary">
            Determine the number of fix-it hints associated with the
            given diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="525e0a96-a1f1-8419-2bc5-05bfc1f423c0.htm">clang_getDiagnosticNumRanges</a></td><td><div class="summary">
            Determine the number of source ranges associated with the given diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="973ad9c5-52a4-9a28-41b5-a93f6d29e515.htm">clang_getDiagnosticOption</a></td><td><div class="summary">
            Retrieve the name of the command-line option that enabled this diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="02745e9b-40c3-ee4f-0544-6a4298fecd77.htm">clang_getDiagnosticRange</a></td><td><div class="summary">
             Retrieve a source range associated with the diagnostic.
            
             A diagnostic's source ranges highlight important elements in the source
             code.On the command line, Clang displays source ranges by
             underlining them with '~' characters.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8c4b5b8b-151c-dc01-f6c5-6fa1b05ca3a8.htm">clang_getDiagnosticSetFromTU</a></td><td><div class="summary">
            Retrieve the complete set of diagnostics associated with a translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="dc66b6a0-42db-0792-7b46-b92b0e26572a.htm">clang_getDiagnosticSeverity</a></td><td><div class="summary">
            Determine the severity of the given diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ace2142b-79f9-4a69-0fc9-b5580a7e49b0.htm">clang_getDiagnosticSpelling</a></td><td><div class="summary">
            Retrieve the text of the given diagnostic.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2ef6446b-b233-b823-8d72-dffb91cf64a6.htm">clang_getElementType</a></td><td><div class="summary">
             Return the element type of an array, complex, or vector type.
            
             If a type is passed in that is not an array, complex, or vector type,
             an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ae64723b-1a33-8b87-245e-e120c33eccb8.htm">clang_getEnumConstantDeclUnsignedValue</a></td><td><div class="summary">
             Retrieve the integer value of an enum constant declaration as an unsigned
             long long.
            
             If the cursor does not reference an enum constant declaration, ULLONG_MAX is returned.
             Since this is also potentially a valid constant value, the kind of the cursor
             must be verified before calling this function.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bf507bfb-9ce6-830f-587a-ae774f76f0e0.htm">clang_getEnumConstantDeclValue</a></td><td><div class="summary">
             Retrieve the integer value of an enum constant declaration as a signed
             long long.
            
             If the cursor does not reference an enum constant declaration, LLONG_MIN is returned.
             Since this is also potentially a valid constant value, the kind of the cursor
             must be verified before calling this function.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b06dfd6b-8230-41b1-be67-afebf4bd47e4.htm">clang_getEnumDeclIntegerType</a></td><td><div class="summary">
             Retrieve the integer type of an enum declaration.
            
             If the cursor does not reference an enum declaration,
             an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f08a6310-369e-df5b-70c8-32bc876ff9e3.htm">clang_getExceptionSpecificationType</a></td><td><div class="summary">
             Retrieve the exception specification type associated with a function type.
             This is a value of type CXCursor_ExceptionSpecificationKind.
            
             If a non-function type is passed in, an error code of -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bfe96e75-66be-c2a3-9d45-bca6ed559fe9.htm">clang_getExpansionLocation</a></td><td><div class="summary">
             Retrieve the file, line, column, and offset represented by
             the given source location.
            
             If the location refers into a macro expansion, retrieves the
             location of the macro expansion.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b21c6eb0-9d6d-2ba5-7c6a-ccdf86bfb8df.htm">clang_getFieldDeclBitWidth</a></td><td><div class="summary">
             Retrieve the bit width of a bit field declaration as an integer.
            
             If a cursor that is not a bit field declaration is passed in, -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2be1940b-575f-59b2-057d-1da8b5a849b1.htm">clang_getFile</a></td><td><div class="summary">
            Retrieve a file handle within the given translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="468592b9-a89d-05bc-9f0d-3460821b3faf.htm">clang_getFileContents</a></td><td><div class="summary">
            Retrieve the buffer associated with the given file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6af082f5-f23f-f563-253e-4aca2cdf6b4b.htm">clang_getFileLocation</a></td><td><div class="summary">
             Retrieve the file, line, column, and offset represented by
             the given source location.
            
             If the location refers into a macro expansion, return where the macro was
             expanded or where the macro argument was written, if the location points at
             a macro argument.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="717af2b2-6d0c-f434-3bb2-e53c1d6670e0.htm">clang_getFileName</a></td><td><div class="summary">
            Retrieve the complete file and path name of the given file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="daf50217-d853-3ab8-d564-ae2a73fb95b3.htm">clang_getFileTime</a></td><td><div class="summary">
            Retrieve the last modification time of the given file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1cb16a15-e886-d355-8b27-051321ee16ce.htm">clang_getFileUniqueID</a></td><td><div class="summary">
            Retrieve the unique ID for the given file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0a13f23b-10a6-0a1a-671c-ecf0cec0016c.htm">clang_getFunctionTypeCallingConv</a></td><td><div class="summary">
             Retrieve the calling convention associated with a function type.
            
             If a non-function type is passed in, CXCallingConv_Invalid is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e3dafa4a-dc0a-2196-88f2-8675ba6d12f3.htm">clang_getIBOutletCollectionType</a></td><td><div class="summary"><p>Get IBOutlet Collection Type</p><p>IBOutletコレクションタイプを取得</p></div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fb0322f0-2d88-f70b-e230-3d9f750e7381.htm">clang_getIncludedFile</a></td><td><div class="summary">
            Retrieve the file that is included by the given inclusion directive cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b6367d75-5913-d018-4b6f-6c14f2aff3a5.htm">clang_getInclusions</a></td><td><div class="summary">
            Visit the set of preprocessor inclusions in a translation unit.
            The visitor function is called with the provided data for every included
            file.This does not include headers included by the PCH file(unless one
            is inspecting the inclusions in the PCH file itself).
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ac3281a6-f695-294b-4e7a-7df367b1ae8e.htm">clang_getInstantiationLocation</a></td><td><div class="summary">
             Legacy API to retrieve the file, line, column, and offset represented
             by the given source location.
            
             This interface has been replaced by the newer interface
             <span class="code">clang_getExpansionLocation()</span>.
             See that interface's documentation for details.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0c63a80c-ccdd-f09e-72c0-22992bd569c3.htm">clang_getLocation</a></td><td><div class="summary">
            Retrieves the source location associated with a given file/line/column
            in a particular translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3a0eff0e-4157-5784-159a-e45b04f803b4.htm">clang_getLocationForOffset</a></td><td><div class="summary">
            Retrieves the source location associated with a given character offset
            in a particular translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="67184c30-26da-3197-ae45-638c923b1645.htm">clang_getNamedType</a></td><td><div class="summary">
             Retrieve the type named by the qualified-id.
            
             If a non-elaborated type is passed in, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2dec26fb-ebdd-7d38-1906-b77011e50da5.htm">clang_getNullCursor</a></td><td><div class="summary">
            Retrieve the NULL cursor, which represents no entity.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="17b2e5d3-9b1e-8857-bb91-2d3445482e58.htm">clang_getNullLocation</a></td><td><div class="summary">
            Retrieve a NULL (invalid) source location.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5b85e87a-7fd6-4665-6149-0d1be865e119.htm">clang_getNullRange</a></td><td><div class="summary">
            Retrieve a NULL (invalid) source range.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="409d698a-ad69-674d-d73a-c264df90d466.htm">clang_getNumArgTypes</a></td><td><div class="summary">
             Retrieve the number of non-variadic parameters associated with a
             function type.
            
             If a non-function type is passed in, -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="83dd93e2-a419-2d75-0584-7db3bd10cdb4.htm">clang_getNumCompletionChunks</a></td><td><div class="summary">
            Retrieve the number of chunks in the given code-completion string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="003cfbe4-4a99-f8da-2a44-42cff4ce842e.htm">clang_getNumDiagnostics</a></td><td><div class="summary">
            Determine the number of diagnostics produced for the given
            translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ec12e2c0-b9e7-f527-4d39-2ad71017c182.htm">clang_getNumDiagnosticsInSet</a></td><td><div class="summary">
            Determine the number of diagnostics in a CXDiagnosticSet.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3f9e86c6-aa04-80f7-928b-62b12daeb538.htm">clang_getNumElements</a></td><td><div class="summary">
             Return the number of elements of an array or vector type.
            
             If a type is passed in that is not an array or vector type,
             -1 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9419885d-ddf1-f7dc-e579-09dc60377856.htm">clang_getNumOverloadedDecls</a></td><td><div class="summary">
            Determine the number of overloaded declarations referenced by a
            <span class="code">CXCursor_OverloadedDeclRef</span> cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ce927d4b-1884-8a58-97e3-6d659a982547.htm">clang_getOverloadedDecl</a></td><td><div class="summary">
            Retrieve a cursor for one of the overloaded declarations referenced
            by a <span class="code">CXCursor_OverloadedDeclRef</span> cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="951ab168-716d-2509-9d4e-92f8d9ab25ef.htm">clang_getOverriddenCursors</a></td><td><div class="summary">
             Determine the set of methods that are overridden by the given
             method.
            
             In both Objective-C and C++, a method(aka virtual member function,
             in C++) can override a virtual method in a base class. For
             Objective-C, a method is said to override any method in the class's
             base class, its protocols, or its categories' protocols, that has the same
             selector and is of the same kind(class or instance).
             If no such method exists, the search continues to the class's superclass,
             its protocols, and its categories, and so on.A method from an Objective-C
             implementation is considered to override the same methods as its
             corresponding method in the interface.
            
             For C++, a virtual member function overrides any virtual member
             function with the same signature that occurs in its base
             classes.With multiple inheritance, a virtual member function can
             override several virtual member functions coming from different
             base classes.
            
             In all cases, this function determines the immediate overridden
             method, rather than all of the overridden methods.For example, if
             a method is originally declared in a class A, then overridden in B
             (which in inherits from A) and also in C(which inherited from B),
             then the only overridden method returned from this function when
             invoked on C's method will be B's method. The client may then
             invoke this function again, given the previously-found overridden
             methods, to map out the complete method-override set.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="92df5a9e-7281-bd4b-d420-838a846a4ed7.htm">clang_getPointeeType</a></td><td><div class="summary">
            For pointer types, returns the type of the pointee.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5fe6af5c-20fb-5f44-ef4c-8add25693df4.htm">clang_getPresumedLocation</a></td><td><div class="summary">
             Retrieve the file, line and column represented by the given source
             location, as specified in a #line directive.
            
             Example: given the following source code in a file somefile.c
            
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADA0QE0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADA0QE0CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EADA0QE0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-preprocessor">#123</span> <span class="highlight-literal">"dummy.c"</span> <span class="highlight-number">1</span>

<span class="highlight-keyword">static</span> <span class="highlight-keyword">int</span> func(<span class="highlight-keyword">void</span>)
{
 <span class="highlight-keyword">return</span> <span class="highlight-number">0</span>;
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADA0QE0CDA");</script>
            
             the location information returned by this function would be
            
             File: dummy.c Line: 124 Column: 12
            
             whereas <span class="code">clang_getExpansionLocation()</span> would have returned
            
             File: somefile.c Line: 3 Column: 12
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0727a275-b041-f0e0-345b-c98144309ea4.htm">clang_getRange</a></td><td><div class="summary">
            Retrieve a source range given the beginning and ending source locations.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4aa43c2e-444c-7086-4bc3-a25872235d73.htm">clang_getRangeEnd</a></td><td><div class="summary">
            Retrieve a source location representing the last character within a
            source range.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8bc7c5fa-5487-42b5-59a5-edd4379b2f97.htm">clang_getRangeStart</a></td><td><div class="summary">
            Retrieve a source location representing the first character within a
            source range.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1e095d37-d785-8660-8062-ce4c4ba47838.htm">clang_getRemappings</a></td><td><div class="summary">
            Retrieve a remapping.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="76bbd212-1a92-aea0-abc5-e647fa9b3ff1.htm">clang_getRemappingsFromFileList</a></td><td><div class="summary">
            Retrieve a remapping.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="070861fa-1b34-c142-549b-fb95de110dc8.htm">clang_getResultType</a></td><td><div class="summary">
             Retrieve the return type associated with a function type.
            
             If a non-function type is passed in, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="95fe266b-07c0-6dcf-d8fc-5c3b244c590d.htm">clang_getSkippedRanges</a></td><td><div class="summary">
             Retrieve all ranges that were skipped by the preprocessor.
            
             The preprocessor will skip lines when they are surrounded by an
             if/ifdef/ifndef directive whose condition does not evaluate to true.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8c2f9a5c-30d2-243f-19fa-46b33d6dd3de.htm">clang_getSpecializedCursorTemplate</a></td><td><div class="summary">
             Given a cursor that may represent a specialization or instantiation
             of a template, retrieve the cursor that represents the template that it
             specializes or from which it was instantiated.
            
             This routine determines the template involved both for explicit
             specializations of templates and for implicit instantiations of the template,
             both of which are referred to as "specializations". For a class template
             specialization(e.g., <span class="code">std::vector&lt;bool&gt;</span>), this routine will return
             either the primary template(<span class="code">std::vector</span>) or, if the specialization was
             nstantiated from a class template partial specialization, the class template
             partial specialization.For a class template partial specialization and a
             unction template specialization(including instantiations), this
             this routine will return the specialized template.
            
             For members of a class template (e.g., member functions, member classes, or
             static data members), returns the specialized or instantiated member.
             Although not strictly "templates" in the C++ language, members of class
             templates have the same notions of specializations and instantiations that
             templates do, so this routine treats them similarly.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="04a7ec12-e551-8ab0-aba5-3cd9841fd190.htm">clang_getSpellingLocation</a></td><td><div class="summary">
             Retrieve the file, line, column, and offset represented by
             the given source location.
            
             If the location refers into a macro instantiation, return where the
             location was originally spelled in the source file.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="31d012c7-5feb-0b91-7c70-3771fbd58439.htm">clang_getTemplateCursorKind</a></td><td><div class="summary">
             Given a cursor that represents a template, determine
             the cursor kind of the specializations would be generated by instantiating
             the template.
            
             This routine can be used to determine what flavor of function template,
             class template, or class template partial specialization is stored in the
             cursor.For example, it can describe whether a class template cursor is
             declared with "struct", "class" or "union".
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0dc593c8-3eb4-7461-d689-a8d3ae0155e4.htm">clang_getToken</a></td><td><div class="summary">
            Get the raw lexical token starting with the given location.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7f8099cb-bbb3-9629-5928-049d422b6add.htm">clang_getTokenExtent</a></td><td><div class="summary">
            Retrieve a source range that covers the given token.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bc199c45-1a6d-f1b8-8fed-a4f1fdced385.htm">clang_getTokenKind</a></td><td><div class="summary">
            Determine the kind of the given token.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="752d3d91-b414-08fb-dec9-e34bbfbe8a4f.htm">clang_getTokenLocation</a></td><td><div class="summary">
            Retrieve the source location of the given token.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3e8f72b1-0e26-2730-fadc-73298d130769.htm">clang_getTokenSpelling</a></td><td><div class="summary">
             Determine the spelling of the given token.
            
             The spelling of a token is the textual representation of that token, e.g.,
             the text of an identifier or keyword.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="318cf321-1efe-9059-3b2f-dc5402103748.htm">clang_getTranslationUnitCursor</a></td><td><div class="summary">
             Retrieve the cursor that represents the given translation unit.
            
             The translation unit cursor can be used to start traversing the
             various declarations within the given translation unit.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1ec67da6-f578-196f-caa6-684b2f327de1.htm">clang_getTranslationUnitSpelling</a></td><td><div class="summary">
            Get the original translation unit source file name.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="72261121-e4c7-a9f5-5aae-0ee77cb5b58a.htm">clang_getTranslationUnitTargetInfo</a></td><td><div class="summary">
             Get target information for this translation unit.
            
             The CXTargetInfo object cannot outlive the CXTranslationUnit object.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3fc02857-38c4-ea9b-60b1-50136e426de6.htm">clang_getTUResourceUsageName</a></td><td><div class="summary">
            Returns the human-readable null-terminated C string that represents
            the name of the memory category.This string should never be freed.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="455cafd2-1fbc-b961-4247-b81bc3c0874a.htm">clang_getTypeDeclaration</a></td><td><div class="summary">
            Return the cursor for the declaration of the given type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8843f3d4-907e-f2b4-6e87-b52cdc34daca.htm">clang_getTypedefDeclUnderlyingType</a></td><td><div class="summary">
             Retrieve the underlying type of a typedef declaration.
            
             If the cursor does not reference a typedef declaration,
             an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d63f0a3a-86a1-3bba-9e5e-df3548d770b4.htm">clang_getTypedefName</a></td><td><div class="summary">
            Returns the typedef name of the given type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cc1d0004-8a5e-6625-bcb3-6d107b752ee9.htm">clang_getTypeKindSpelling</a></td><td><div class="summary">
            Retrieve the spelling of a given CXTypeKind.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="378d4695-b8d7-4825-41b3-d59cfb333ff4.htm">clang_getTypeSpelling</a></td><td><div class="summary">
             Pretty-print the underlying type using the rules of the
             language of the translation unit from which it came.
            
             If the type is invalid, an empty string is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ffededf8-6a0c-cd8d-7e40-0d7a2cd3e0e1.htm">clang_hashCursor</a></td><td><div class="summary">
            Compute a hash value for the given cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="287b8a77-f8c4-49c4-be51-8a00e32b1420.htm">clang_HTMLStartTag_getAttrName</a></td><td><div class="summary">
            Get Attribute Name of HTML Start Tag Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="473c4d02-99fa-4c36-0ad1-6d80b66865db.htm">clang_HTMLStartTag_getAttrValue</a></td><td><div class="summary">
            Get Attribute Value of HTML Start Tag Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e3a850df-7fa8-9965-e3b3-b02412fe9ced.htm">clang_HTMLStartTag_getNumAttrs</a></td><td><div class="summary">
            Get Number of Attributes of HTML Start Tag Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e90e7f16-811a-4647-7fa1-aa16423675ad.htm">clang_HTMLStartTagComment_isSelfClosing</a></td><td><div class="summary">
            Check HTML Start Tag Comment is Slef Closing
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c06b9741-e2ca-40bd-5a3a-0be194a699ef.htm">clang_HTMLTagComment_getAsString</a></td><td><div class="summary">
            Convert an HTML tag AST node to string.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c248b476-f24a-336a-fe0c-f87d32f3c1e4.htm">clang_HTMLTagComment_getTagName</a></td><td><div class="summary">
            Get Tag Name of HTML Tag Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6ddf6337-8de7-a94a-6f8f-a2734ec387d7.htm">clang_index_getClientContainer</a></td><td><div class="summary">
            For retrieving a custom CXIdxClientContainer attached to a container.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d32b090c-bc74-7ffc-dd56-f11ff4ab5fc1.htm">clang_index_getClientEntity</a></td><td><div class="summary">
            For retrieving a custom CXIdxClientEntity attached to an entity.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="96ca9b9e-7240-a2ac-a3fd-b02c7b5a0443.htm">clang_index_getCXXClassDeclInfo</a></td><td><div class="summary">
            Get C++ Class Declaration Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fd352b15-1bec-7bd6-0f5b-6cec17fc2ac2.htm">clang_index_getIBOutletCollectionAttrInfo</a></td><td><div class="summary">
            Get IBOutlet Collection AttributeInfo
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2d0fb6e3-be5d-d229-c92d-e1931f94e371.htm">clang_index_getObjCCategoryDeclInfo</a></td><td><div class="summary">
            Get Objective-C Category Declaration Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b99715e4-a1d8-3ba3-ba88-6b81e07bbce3.htm">clang_index_getObjCContainerDeclInfo</a></td><td><div class="summary">
            Get Objective-C Container Declaration Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="813460b2-dcb8-5cd8-86c7-9f31d2cfac90.htm">clang_index_getObjCInterfaceDeclInfo</a></td><td><div class="summary">
            Get Objective-C Interface Declaration Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0b58976f-c5c2-399a-131b-3219eb19b602.htm">clang_index_getObjCPropertyDeclInfo</a></td><td><div class="summary">
            Get Objective-C Property Declaration Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b2d9695f-e984-d7ea-e2ba-30df458654f2.htm">clang_index_getObjCProtocolRefListInfo</a></td><td><div class="summary">
            Get Objective-C Protocol Reference List Info
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1602b39d-30f8-b24f-8bd0-36042505029c.htm">clang_index_isEntityObjCContainerKind</a></td><td><div class="summary">
            Check specified Index Entity Kind is Entity Objective-C Container Kind
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b844c12d-5237-9a82-31c4-d65056a22ce2.htm">clang_index_setClientContainer</a></td><td><div class="summary">
            For setting a custom CXIdxClientContainer attached to a container.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="01a06dfa-92d4-a89c-bc8a-70ef610bd2a2.htm">clang_index_setClientEntity</a></td><td><div class="summary">
            For setting a custom CXIdxClientEntity attached to an entity.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fe062690-d2cf-9f11-db67-32ddcfacf908.htm">clang_IndexAction_create</a></td><td><div class="summary">
            An indexing action/session, to be applied to one or multiple
            translation units.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9b555343-2a5e-f4a3-2c19-ac76a8aa4f45.htm">clang_IndexAction_dispose</a></td><td><div class="summary">
             Destroy the given index action.
            
             The index action must not be destroyed until all of the translation units
             created within that index action have been destroyed.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ddbfeb9e-42c0-edae-47b8-f348133acbd7.htm">clang_indexLoc_getCXSourceLocation</a></td><td><div class="summary">
            Retrieve the CXSourceLocation represented by the given CXIdxLoc.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="41583743-0bde-562f-d25d-62a510fe6b60.htm">clang_indexLoc_getFileLocation</a></td><td><div class="summary">
             Retrieve the CXIdxFile, file, line, column, and offset represented by
             the given <span class="code">CXIdxLoc</span>.
            
             If the location refers into a macro expansion, retrieves the
             location of the macro expansion and if it refers into a macro argument
             retrieves the location of the argument.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="508f5403-2fe4-40f2-c0a4-96d583afac8d.htm">clang_indexSourceFile</a></td><td><div class="summary">
            Index the given source file and the translation unit corresponding
            to that file via callbacks implemented through #IndexerCallbacks.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="e5288395-c216-954e-03cb-cc816742ed34.htm">clang_indexSourceFileFullArgv</a></td><td><div class="summary">
            Same as clang_indexSourceFile but requires a full command line
            for <span class="code">command_line_args</span> including argv[0]. This is useful if the standard
            library paths are relative to the binary.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0ae2344d-0659-f35d-edb8-9d29a7ab4939.htm">clang_indexTranslationUnit</a></td><td><div class="summary">
             Index the given translation unit via callbacks implemented through
             <span class="code">IndexerCallbacks</span>.
            
             The order of callback invocations is not guaranteed to be the same as
             when indexing a source file.The high level order will be:
            
             -Preprocessor callbacks invocations
             -Declaration/reference callbacks invocations
             -Diagnostic callback invocations
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="71cdce8a-f6ac-1d0a-9666-4c2847f4f87c.htm">clang_InlineCommandComment_getArgText</a></td><td><div class="summary">
            Get Argument Text of Inline Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="96b609d8-80f1-b469-8cf9-dfbb6980a3a2.htm">clang_InlineCommandComment_getCommandName</a></td><td><div class="summary">
            Get Command Name of Inline Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7a4d9b24-85fc-c97b-541e-42133d00a3ea.htm">clang_InlineCommandComment_getNumArgs</a></td><td><div class="summary">
            Get Number of Command Arguments
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d31b2ec9-86b8-261f-5ac9-61fc35f5081f.htm">clang_InlineCommandComment_getRenderKind</a></td><td><div class="summary">
            Get Render Kind of Inline Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="3a761b61-3393-1e4e-a313-ebb6c9d66ab7.htm">clang_InlineContentComment_hasTrailingNewline</a></td><td><div class="summary">
            Check Comment has Trailing New Line
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="9fd764a2-7506-fe3e-3603-e7477de9b330.htm">clang_isAttribute</a></td><td><div class="summary">
            Determine whether the given cursor kind represents an attribute.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="67cd77eb-4b6e-05f8-a5e6-8e0e64049edb.htm">clang_isConstQualifiedType</a></td><td><div class="summary">
            Determine whether a CXType has the "const" qualifier set,
            without looking through typedefs that may have added "const" at a
            different level.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="62a09735-56dc-bb5a-4da1-bc13fafd5eab.htm">clang_isCursorDefinition</a></td><td><div class="summary">
            Determine whether the declaration pointed to by this cursor
            is also a definition of that entity.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7be527e5-18fb-62bd-2946-5487f4a9b633.htm">clang_isDeclaration</a></td><td><div class="summary">
            Determine whether the given cursor kind represents a declaration.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="672537ad-0b38-f681-236a-9eca3ddf2c4f.htm">clang_isExpression</a></td><td><div class="summary">
            Determine whether the given cursor kind represents an expression.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="524f9ccd-3e0a-41ff-a30c-2c75936e33cb.htm">clang_isFileMultipleIncludeGuarded</a></td><td><div class="summary">
            Determine whether the given header is guarded against
            multiple inclusions, either with the conventional
            #ifndef/#define/#endif macro guards or with #pragma once.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4dd93f22-a0f3-99ab-f300-f5814cd87492.htm">clang_isFunctionInlined</a></td><td><div class="summary">
             Determine whether a CXCursor that is a function declaration, is an
             inline declaration.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4eb6a476-353b-cd66-b746-c65a11f769ff.htm">clang_isFunctionTypeVariadic</a></td><td><div class="summary">
            Return 1 if the CXType is a variadic function type, and 0 otherwise.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="35371497-fb2f-ce6c-9958-cc33f3469be7.htm">clang_isInvalid</a></td><td><div class="summary">
            Determine whether the given cursor kind represents an invalid cursor.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4422b1a0-5697-bf66-f87d-88d857d4053e.htm">clang_isInvalidDeclaration</a></td><td><div class="summary">
             Determine whether the given declaration is invalid.
            
             A declaration is invalid if it could not be parsed successfully.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="eed68fcf-1a2a-beb7-71da-f85a1a456442.htm">clang_isMacroBuiltin</a></td><td><div class="summary">
            Determine whether a  CXCursor that is a macro, is a
            builtin one.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8c2e1738-c230-47b6-82c4-e5aef79bee6d.htm">clang_isMacroFunctionLike</a></td><td><div class="summary">
            Determine whether a  CXCursor that is a macro, is
            function like.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cc9fe1ed-496a-c0e3-a68d-dd7eeca9775d.htm">clang_isPODType</a></td><td><div class="summary">
            Return 1 if the CXType is a POD (plain old data) type, and 0
            otherwise.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f737334f-b740-48b9-f9f0-4d13df16390c.htm">clang_isPreprocessing</a></td><td><div class="summary">
            Determine whether the given cursor represents a preprocessing
            element, such as a preprocessor directive or macro instantiation.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5cde8c7a-934c-1aa1-e023-03d75d06d0e5.htm">clang_isReference</a></td><td><div class="summary">
             Determine whether the given cursor kind represents a simple reference.
            
             Note that other kinds of cursors(such as expressions) can also refer to
             other cursors.
             Use <span class="code">clang_getCursorReferenced()</span> to determine whether a
             particular cursor refers to another entity.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="692b8b91-28c3-a8ab-6800-19e2ced41394.htm">clang_isRestrictQualifiedType</a></td><td><div class="summary">
            Determine whether a CXType has the "restrict" qualifier set,
            without looking through typedefs that may have added "restrict" at a
            different level.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="69d3d241-ea51-5ee9-604a-c3dec38880ae.htm">clang_isStatement</a></td><td><div class="summary">
            Determine whether the given cursor kind represents a statement.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d9de1833-28dc-2011-9980-9dd3a75b4c28.htm">clang_isTranslationUnit</a></td><td><div class="summary">
            Determine whether the given cursor kind represents a translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="618bca53-2bdc-3c6d-f314-40ccff34a3ee.htm">clang_isUnexposed</a></td><td><div class="summary">
            Determine whether the given cursor represents a currently
            unexposed piece of the AST(e.g., <span class="code">CXCursor_UnexposedStmt</span>).
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f5179175-6113-6c26-97f5-35409ca3ed8a.htm">clang_isVirtualBase</a></td><td><div class="summary">
            Returns 1 if the base class specified by the cursor with kind
            CX_CXXBaseSpecifier is virtual.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="4f8562a3-3531-3c1b-3071-a9bc47208488.htm">clang_isVolatileQualifiedType</a></td><td><div class="summary">
            Determine whether a CXType has the "volatile" qualifier set,
            without looking through typedefs that may have added "volatile" at
            a different level.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1bef56dd-8fb9-b920-c774-e6dd385e6156.htm">clang_loadDiagnostics</a></td><td><div class="summary">
             Deserialize a set of diagnostics from a Clang diagnostics bitcode file.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2a02ccaa-9c1e-c2b7-bd83-be71ee62dde0.htm">clang_Location_isFromMainFile</a></td><td><div class="summary">
            Returns non-zero if the given source location is in the main file of
            the corresponding translation unit.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f13c57a0-b66b-4a59-4db0-a79748ec7205.htm">clang_Location_isInSystemHeader</a></td><td><div class="summary">
             Returns non-zero if the given source location is in a system header.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="bf153a58-79dc-5bc9-b97a-6d4feb13c62c.htm">clang_Module_getASTFile</a></td><td><div class="summary">
            Get AST File from Module
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8ddfd405-c9a7-83de-9a20-943095e48a40.htm">clang_Module_getFullName</a></td><td><div class="summary">
            Get Module Full Name
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="02b37b19-321a-b009-a7e6-82813cfbd8f8.htm">clang_Module_getName</a></td><td><div class="summary">
            Get Module Name
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="28169c12-14be-3c15-8688-c73ce2ecadd0.htm">clang_Module_getNumTopLevelHeaders</a></td><td><div class="summary">
            Get Number of Top Level Headers
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="380890ab-13b9-d7e0-94ba-0325a03affeb.htm">clang_Module_getParent</a></td><td><div class="summary">
            Get Parent Module
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0618f522-c8b7-7085-0f2d-005401e5fa79.htm">clang_Module_getTopLevelHeader</a></td><td><div class="summary">
            Get Top Level Header
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="05e7cf6c-400c-b973-1dc7-0fb9d4df8f89.htm">clang_Module_isSystem</a></td><td><div class="summary">
            Check Module is System Module
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="aa5cc8b4-372a-f9bb-95b8-f9f6fcf043b5.htm">clang_ModuleMapDescriptor_create</a></td><td><div class="summary">
            Create Module Map Descriptor
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ad632f1e-6f4e-d56d-eb70-d37472cf5e02.htm">clang_ModuleMapDescriptor_dispose</a></td><td><div class="summary">
            Dispose Module Map Descriptor
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2b6296fc-5323-7ce0-8e8d-068ffe1e8786.htm">clang_ModuleMapDescriptor_setFrameworkModuleName</a></td><td><div class="summary">
            Set Framework Module Name to Module Map Descriptor
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ec7a2b31-1f10-aacb-7fbd-9bd24bf8cc24.htm">clang_ModuleMapDescriptor_setUmbrellaHeader</a></td><td><div class="summary">
            Set Umbrella Header to Module Map Descriptor
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="929d251c-35a8-3513-165b-caf7611e3ecc.htm">clang_ModuleMapDescriptor_writeToBuffer</a></td><td><div class="summary">
            Write Out Module Map Descriptor to Character Buffer
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="aec9f4e2-3571-7895-e737-4f107e5b5634.htm">clang_ParamCommandComment_getDirection</a></td><td><div class="summary">
            Get Diction of Param Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7c5deccc-4149-4282-14f1-d541d4ab3bba.htm">clang_ParamCommandComment_getParamIndex</a></td><td><div class="summary">
            Get Parameter Index of Param Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d3beeed7-474a-1967-8b19-e0cb84c59de6.htm">clang_ParamCommandComment_getParamName</a></td><td><div class="summary">
            Get Parameter Name of Param Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="2851c873-82f6-559a-feae-63e331c7de89.htm">clang_ParamCommandComment_isDirectionExplicit</a></td><td><div class="summary">
            Check Diction of Param Command Comment is Explicit
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="eda7e5c5-ebc7-3e47-4bae-11e4333e599f.htm">clang_ParamCommandComment_isParamIndexValid</a></td><td><div class="summary">
            Check Param Command Comment is Valid Parameter Index
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f7cc02d2-6e45-11b5-b8f0-f2d09509d0cc.htm">clang_parseTranslationUnit</a></td><td><div class="summary">
            Same as <span class="code">clang_parseTranslationUnit2()</span>, but returns
            the <span class="code">CXTranslationUnit</span> instead of an error code.
            In case of an error this routine returns a <span class="code">NULL</span><span class="code">CXTranslationUnit</span>,
            without further detailed error codes.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="5f3cc85a-bfd1-495e-c77b-a29777625bb2.htm">clang_parseTranslationUnit2</a></td><td><div class="summary">
             Parse the given source file and the translation unit corresponding
             to that file.
            
             This routine is the main entry point for the Clang C API, providing the
             ability to parse a source file into a translation unit that can then be
             queried by other functions in the API.This routine accepts a set of
             command-line arguments so that the compilation can be configured in the same
             way that the compiler is configured on the command line.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0e6eabd1-560f-33ef-fec9-d049ede037e5.htm">clang_parseTranslationUnit2FullArgv</a></td><td><div class="summary">
            Same as clang_parseTranslationUnit2 but requires a full command line
            for <span class="parameter">command_line_args</span> including argv[0]. This is useful if the standard
            library paths are relative to the binary.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="dd2ebbd5-937e-f860-849c-26ecb55b0fff.htm">clang_PrintingPolicy_dispose</a></td><td><div class="summary">
            Release a printing policy.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f629f285-84d3-968b-a7e2-fe33017b8e28.htm">clang_PrintingPolicy_getProperty</a></td><td><div class="summary">
            Get a property value for the given printing policy.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="433f61c6-67b9-0e0f-6c99-6e01ff3e3896.htm">clang_PrintingPolicy_setProperty</a></td><td><div class="summary">
            Set a property value for the given printing policy.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="99de092d-924b-2999-d33a-d4cac5693e09.htm">clang_Range_isNull</a></td><td><div class="summary">
            Returns non-zero if <span class="parameter">range</span> is null.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="856d42d1-8b99-03f0-85ef-67aad904a000.htm">clang_remap_dispose</a></td><td><div class="summary">
            Dispose the remapping.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="792c9660-5589-d4cc-b05b-37b4488d11a3.htm">clang_remap_getFilenames</a></td><td><div class="summary">
            Get the original and the associated filename from the remapping.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c49ef7ed-190d-2b4c-9265-12616f1426f2.htm">clang_remap_getNumFiles</a></td><td><div class="summary">
            Determine the number of remappings.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c7e2151c-a154-6707-b54f-b6897f543b24.htm">clang_reparseTranslationUnit</a></td><td><div class="summary">
             Reparse the source files that produced this translation unit.
            
             This routine can be used to re-parse the source files that originally
             created the given translation unit, for example because those source files
             have changed(either on disk or as passed via <span class="parameter">unsaved_files</span>).
             The source code will be reparsed with the same command-line options as it
             was originally parsed.
            
             Reparsing a translation unit invalidates all cursors and source locations
             that refer into that translation unit. This makes reparsing a translation
             unit semantically equivalent to destroying the translation unit and then
             creating a new translation unit with the same command-line arguments.
             However, it may be more efficient to reparse a translation
             unit using this routine.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="12cfd671-98e0-9ac7-0056-7bd40166deb5.htm">clang_saveTranslationUnit</a></td><td><div class="summary">
             Saves a translation unit into a serialized representation of
             that translation unit on disk.
            
             Any translation unit that was parsed without error can be saved
             into a file.The translation unit can then be deserialized into a
             new <span class="code">CXTranslationUnit</span> with <span class="code">clang_createTranslationUnit()</span> or,
             if it is an incomplete translation unit that corresponds to a
             header, used as a precompiled header when parsing other translation
             units.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="96e3625b-6d1f-073c-9d97-c1ae35c1e540.htm">clang_sortCodeCompletionResults</a></td><td><div class="summary">
             Sort the code-completion results in case-insensitive alphabetical order.
            
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="38d24626-982e-b688-4a87-52832dcdfec3.htm">clang_suspendTranslationUnit</a></td><td><div class="summary">
             Suspend a translation unit in order to free memory associated with it.
            
             A suspended translation unit uses significantly less memory but on the other
             side does not support any other calls than <span class="code">clang_reparseTranslationUnit()</span>
             to resume it or <span class="code">clang_disposeTranslationUnit()</span> to dispose it completely.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ec82803c-49ea-3980-34d7-64eaa4e92411.htm">clang_TargetInfo_dispose</a></td><td><div class="summary">
            Destroy the CXTargetInfo object.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="c51582fe-a020-afe7-0c0d-249798b8acae.htm">clang_TargetInfo_getPointerWidth</a></td><td><div class="summary">
             Get the pointer width of the target in bits.
            
             Returns -1 in case of error.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1a8b232e-c461-d4c3-d67f-d051eca5776f.htm">clang_TargetInfo_getTriple</a></td><td><div class="summary">
             Get the normalized target triple as a string.
            
             Returns the empty string in case of any error.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cf10b3ff-ee06-3509-1d71-75bd325c3918.htm">clang_TextComment_getText</a></td><td><div class="summary">
            Get Text of Text Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f2143e54-85d8-dd0c-7895-913cd93ef59b.htm">clang_toggleCrashRecovery</a></td><td><div class="summary">
            Enable/disable crash recovery.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="8d3735b3-87ba-705a-2859-8af299e04eef.htm">clang_tokenize</a></td><td><div class="summary">
            Tokenize the source code described by the given range into raw
            lexical tokens.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f7d77cab-7bac-9843-a7c7-c94df9953e7b.htm">clang_TParamCommandComment_getDepth</a></td><td><div class="summary">
             Get Depth of Template Param Command Comment
            
             For example,
              <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABA2CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABA2CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EABA2CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">template&lt;typename C, template&lt;typename T&gt; <span class="highlight-keyword">class</span> TT&gt;
    <span class="highlight-keyword">void</span> test(TT&lt;<span class="highlight-keyword">int</span>&gt; aaa);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABA2CDA");</script>
              for C and TT nesting depth is 0,
              for T nesting depth is 1.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="38c51256-3cba-4eab-12f6-0f565ff77210.htm">clang_TParamCommandComment_getIndex</a></td><td><div class="summary">
             Get Index of Template Param Command Comment
            
             For example,
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABA1CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABA1CDA');return false;" title="コピー">コピー</a></div></div><div id="ID0EABA1CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">template&lt;typename C, template&lt;typename T&gt; <span class="highlight-keyword">class</span> TT&gt;
    <span class="highlight-keyword">void</span> test(TT&lt;<span class="highlight-keyword">int</span>&gt; aaa);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABA1CDA");</script>
             for C and TT nesting depth is 0, so we can ask for index at depth 0:
             at depth 0 C's index is 0, TT's index is 1.
            
             For T nesting depth is 1, so we can ask for index at depth 0 and 1:
             at depth 0 T's index is 1 (same as TT's),
             at depth 1 T's index is 0.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="b3ad89dc-6433-63f2-835c-1e936f800763.htm">clang_TParamCommandComment_getParamName</a></td><td><div class="summary">
            Get Parameter Name of Template Param Command Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="085495c9-0877-30df-2f7f-d655ad6cd4e4.htm">clang_TParamCommandComment_isParamPositionValid</a></td><td><div class="summary">
            Check Parameter Position of Template Param Command Comment is Valid
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="1929b6f2-4301-e2cf-731d-220f29ba3f95.htm">clang_Type_getAlignOf</a></td><td><div class="summary">
             Return the alignment of a type in bytes as per C++[expr.alignof]
             standard.
            
             If the type declaration is invalid, CXTypeLayoutError_Invalid is returned.
             If the type declaration is an incomplete type, CXTypeLayoutError_Incomplete
             is returned.
             If the type declaration is a dependent type, CXTypeLayoutError_Dependent is
             returned.
             If the type declaration is not a constant size type,
             CXTypeLayoutError_NotConstantSize is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="78836480-936a-7a9b-e640-14b45b8dee78.htm">clang_Type_getClassType</a></td><td><div class="summary">
             Return the class type of an member pointer type.
            
             If a non-member-pointer type is passed in, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="220d5550-3300-4680-2d78-50e96d165553.htm">clang_Type_getCXXRefQualifier</a></td><td><div class="summary">
             Retrieve the ref-qualifier kind of a function or method.
            
             The ref-qualifier is returned for C++ functions or methods.For other types
             or non-C++ declarations, CXRefQualifier_None is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="6afc9c70-81b1-c0ef-ec77-23db246b0ad0.htm">clang_Type_getModifiedType</a></td><td><div class="summary">
             Return the type that was modified by this attributed type.
            
             If the type is not an attributed type, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="29b2a3b9-f400-b13d-d691-d7e086bcbc31.htm">clang_Type_getNullability</a></td><td><div class="summary">
            Retrieve the nullability kind of a pointer type.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ab7f1247-15a9-c3e5-b417-b9fbaef87695.htm">clang_Type_getNumObjCProtocolRefs</a></td><td><div class="summary">
             Retrieve the number of protocol references associated with an ObjC object/id.
            
             If the type is not an ObjC object, 0 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="dbc9eb3b-4826-5a23-c241-933000b87d5a.htm">clang_Type_getNumObjCTypeArgs</a></td><td><div class="summary">
             Retreive the number of type arguments associated with an ObjC object.
            
             If the type is not an ObjC object, 0 is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0fa6fc74-9ee1-9c1d-3ff2-9e7c275502dc.htm">clang_Type_getNumTemplateArguments</a></td><td><div class="summary">
            Returns the number of template arguments for given template
            specialization, or -1 if type <span class="parameter">type</span> is not a template specialization.
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a0b5633e-148d-9ffc-4fbe-966b40272b72.htm">clang_Type_getObjCObjectBaseType</a></td><td><div class="summary">
             Retrieves the base type of the ObjCObjectType.
            
             If the type is not an ObjC object, an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="d538b93f-524b-6c77-b546-2bc626128226.htm">clang_Type_getObjCProtocolDecl</a></td><td><div class="summary">
             Retrieve the decl for a protocol reference for an ObjC object/id.
            
             If the type is not an ObjC object or there are not enough protocol
             references, an invalid cursor is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="cc03d695-88fe-1c9b-c2c9-5ca57b8eb0af.htm">clang_Type_getObjCTypeArg</a></td><td><div class="summary">
             Retrieve a type argument associated with an ObjC object.
            
             If the type is not an ObjC or the index is not valid,
             an invalid type is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="7e223c38-0831-952b-83c3-3cad94b97895.htm">clang_Type_getOffsetOf</a></td><td><div class="summary">
             Return the offset of a field named S in a record of type T in bits
             as it would be returned by __offsetof__ as per C++11[18.2p4]
            
             If the cursor is not a record field declaration, CXTypeLayoutError_Invalid
             is returned.
             If the field's type declaration is an incomplete type,
             CXTypeLayoutError_Incomplete is returned.
             If the field's type declaration is a dependent type,
             CXTypeLayoutError_Dependent is returned.
             If the field's name S is not found,
             CXTypeLayoutError_InvalidFieldName is returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="ff6d9ebf-d1e1-5e9c-cf9b-71af7dfbb3ac.htm">clang_Type_getSizeOf</a></td><td><div class="summary">
             Return the size of a type in bytes as per C++[expr.sizeof] standard.
            
             If the type declaration is invalid, CXTypeLayoutError_Invalid is returned.
             If the type declaration is an incomplete type, CXTypeLayoutError_Incomplete
             is returned.
             If the type declaration is a dependent type, CXTypeLayoutError_Dependent is
             returned.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="890c2488-b8b3-a080-34eb-fc31efcc2201.htm">clang_Type_getTemplateArgumentAsType</a></td><td><div class="summary">
             Returns the type template argument of a template class specialization
             at given index.
            
             This function only returns template type arguments and does not handle
             template template arguments or variadic packs.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="0939ced2-1f7d-90d3-aeeb-a4f21dfb7f4f.htm">clang_Type_isTransparentTagTypedef</a></td><td><div class="summary">
             Determine if a typedef is 'transparent' tag.
            
             A typedef is considered 'transparent' if it shares a name and spelling
             location with its underlying tag type, as is the case with the NS_ENUM macro.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a96e7913-1ae4-0da2-3952-fa2ee01b80ac.htm">clang_Type_visitFields</a></td><td><div class="summary">
             Visit the fields of a particular type.
            
             This function visits all the direct fields of the given cursor,
             invoking the given <span class="parameter">visitor</span> function with the cursors of each
             visited field.The traversal may be ended prematurely, if
             the visitor returns <span class="code">CXFieldVisit_Break</span>.
             </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="fc523dd4-6471-d2d1-be3b-c52480171bc8.htm">clang_VerbatimBlockLineComment_getText</a></td><td><div class="summary">
            Get Text of Verbatim Block Line Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="f67081da-dc8c-38c9-8993-5654a469dadb.htm">clang_VerbatimLineComment_getText</a></td><td><div class="summary">
            Get Text of Verbatim Line Comment
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="97b3a7ee-5f05-acd8-8c44-d138249e9963.htm">clang_VirtualFileOverlay_addFileMapping</a></td><td><div class="summary">
            Add File Mapping to Virtual File Overlay
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="053a15de-25f6-645d-bc1f-6a75ce10283e.htm">clang_VirtualFileOverlay_create</a></td><td><div class="summary">
            Create Virtual File Overlay
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="85a065bf-1d25-3c03-ff40-1ea11b300fc4.htm">clang_VirtualFileOverlay_dispose</a></td><td><div class="summary">
            Dispose Virtual File Overlay
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="a4ba5bb9-1f96-6c40-e2ee-b6a15473753c.htm">clang_VirtualFileOverlay_setCaseSensitivity</a></td><td><div class="summary">
            Set Case Sensitivity to Virtual File Overlay
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="28eb0bd4-bde7-c47b-f082-f81a2ceaf2f3.htm">clang_VirtualFileOverlay_writeToBuffer</a></td><td><div class="summary">
            Write Out Virtual File Overlay to Character Buffer
            </div></td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected メソッド" title="Protected メソッド" /><img src="../icons/static.gif" alt="静的メンバー" title="静的メンバー" /></td><td><a href="88307fa6-594e-c7d6-2165-58078bfbf28b.htm">clang_visitChildren</a></td><td><div class="summary">
             Visit the children of a particular cursor.
            
             This function visits all the direct children of the given cursor,
             invoking the given <span class="parameter">visitor</span> function with the cursors of each
             visited child.The traversal may be recursive, if the visitor returns
             <span class="code">CXChildVisit_Recurse</span>. The traversal may also be ended prematurely, if
             the visitor returns <span class="code">CXChildVisit_Break</span>.
             </div></td></tr></table><a href="#PageHeader">トップ</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />関連項目</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">参照</h4><div class="seeAlsoStyle"><a href="61d25157-394c-121d-aaf1-543efa4183d0.htm">LibClang クラス</a></div><div class="seeAlsoStyle"><a href="56206511-e128-4c2f-f3a9-aefe73ab5cb3.htm">ClangNet.Native 名前空間</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>